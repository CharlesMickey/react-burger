{"version":3,"sources":["components/order-price/order-price.module.css","pages/main-page/main-page.module.css","components/app/app.module.css","pages/profile/profile.module.css","components/profile-user-form/profile-user-form.module.css","pages/404/page-404.module.css","pages/feed-page/feed-page.module.css","components/app-header/app-header.module.css","components/profile-navigation/profile-navigation.module.css","components/app-header/app-header.tsx","utils/constants.ts","services/actions/actions-ingredients-type.ts","utils/function.ts","utils/api.ts","services/type/hooks.ts","services/selectors/item-selectors.ts","services/selectors/auth-selectors.ts","components/order-price/order-price.tsx","components/burger-ingredients-card/burger-ingredients-card.tsx","services/actions/ingredients.ts","components/burger-ingredients-card-list/burger-ingredients-card-list.tsx","components/burger-ingredients/burger-ingredients.tsx","services/actions/actions-order-type.ts","services/actions/auth-type.ts","services/actions/action-ws-types.ts","components/constructor-ingredient/constructor-ingredient.tsx","components/burger-constructor/burger-constructor.tsx","services/actions/order.ts","pages/main-page/main-page.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/svg/done.svg","components/order-details/order-details.tsx","images/svg/logo.svg","components/Preloader/Preloader.js","components/ingredient-details/ingredient-details.tsx","services/actions/auth.ts","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/profile-navigation/profile-navigation.tsx","components/profile-user-form/profile-user-form.tsx","services/selectors/wc-selectors.ts","components/order-time/order-time.tsx","components/order-card-ingredients/order-card-ingredients.tsx","components/orders-history/orders-history.tsx","pages/profile/profile.tsx","components/protected-route/protected-route.tsx","pages/404/page-404.tsx","components/order-ingredients/order-ingredients.tsx","components/orders-board/orders-board.tsx","pages/feed-page/feed-page.tsx","components/order-ingredient/order-ingredient.tsx","components/order/order.tsx","components/app/app.tsx","reportWebVitals.ts","services/actions/wsActions.ts","services/actions/wsActionsAuth.ts","services/middleware/socket-middleware.ts","services/reducers/socketAuth.ts","services/reducers/ingredients.ts","services/reducers/order.ts","services/reducers/auth.ts","services/reducers/socket.ts","services/reducers/index.ts","store.tsx","index.tsx","components/order-card-ingredients/order-card-ingredients.module.css","components/orders-board/orders-board.module.css","pages/login/login.module.css","components/order-ingredient/order-ingredient.module.css","components/order/order.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-constructor/burger-constructor.module.css","components/order-details/order-details.module.css","components/ingredient-details/ingredient-details.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","components/modal/modal.module.css","components/burger-ingredients-card/burger-ingredients-card.module.css","components/burger-ingredients-card-list/burger-ingredients-card-list.module.css","components/constructor-ingredient/constructor-ingredient.module.css","components/modal-overlay/modal-overlay.module.css","components/orders-history/orders-history.module.css","components/order-ingredients/order-ingredients.module.css"],"names":["module","exports","AppHeader","pathname","useLocation","className","styleHeader","header","container","position","exact","to","link","activeClassName","active_link","type","logo","buttonProfile","BASE_URL","modalRoot","document","getElementById","CONSTANTS","DAY_US","TODAY","YESTERDAY","FEW_DAYS","STRUCTURE","TITLE","READY","PREPARING","ALL_TIME","CALORIES","PROTEINS","FAT","CARBOHYDRATES","SUBTITLE","BUTTON_NAME","NEW_USER","REGISTER","FORGOT_PASSWORD","RESET_PASSWORD","REMEMBERED_PASSWORD","ENTER","ALREADY_REGISTERED","GET_ITEMS_REQUEST","GET_ITEMS_SUCCESS","GET_ITEMS_ERROR","GET_VIEWED_INGREDIENT","ADD_INGREDIENT_CONSTRUCTOR","DEL_INGREDIENT_CONSTRUCTOR","INCREASE_INGREDIENTS","REDUCE_INGREDIENTS","DRAG_CONSTRUCTOR_INGREDIENT","CLEAR_CONSTRUCTOR_INGREDIENTS","setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","deleteCookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","getTokens","res","accessToken","split","refreshToken","localStorage","setItem","signOut","removeItem","getOrderStatus","status","style","nameStatus","colorStatus","doneColor","pendingColor","cancelledColor","getOrderIngredients","ingredients","allIngredients","map","id","filter","item","_id","flat","getOrderPrice","reduce","acc","curr","price","getOrderDate","order","date","orderDate","createdAt","hours","getHours","minutes","getMinutes","dateNum","parse","toISOString","slice","orderDateNum","whenWasOrderCreated","getTimezoneOffset","checkResponse","response","ok","json","then","err","Promise","reject","headers","Accept","getData","a","fetch","method","getOrderOfNumber","Authorization","body","JSON","stringify","register","email","password","mode","cache","credentials","redirect","referrerPolicy","login","logOut","token","getNewToken","getUserInfo","updateUserInfo","getCodeChangePassword","saveNewPassword","useSelector","selectorHook","useDispatch","dispatchHook","ingredientSelectors","store","ingredientsConstructor","bun","ingredient","previousValue","currentValue","orderNumber","orderRequest","userSelectors","auth","OrderPrice","stylePrice","div","BurgerIngredientsCard","card","location","dispatch","counter","useDrag","collect","monitor","isDrag","isDragging","drag","quantity","opacity","ref","onClick","getViewedIngredient","styleBurgerIngredientsCard","state","background","src","image","alt","count","size","memo","BurgerIngredientsCardList","forwardRef","title","data","burgerIngredientsCardList","list","BurgerIngredients","topRef","useRef","bunRef","sauceRef","mainRef","React","useState","current","setCurrent","useMemo","i","main","sauce","handleClick","scrollIntoView","styleIngredients","section","tab","active","onScroll","topDistance","getBoundingClientRect","y","bunYDistance","Math","abs","sauceYDistance","mainYDistance","minTabDistance","min","scroll","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_ERROR","CLEAR_ORDER_NUMBER","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_ERROR","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_ERROR","TOKEN_REQUEST","TOKEN_SUCCESS","TOKEN_ERROR","USER_REQUEST","USER_SUCCESS","USER_ERROR","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_ERROR","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_CONNECTION_START_AUTH","WS_CONNECTION_SUCCESS_AUTH","WS_CONNECTION_ERROR_AUTH","WS_CONNECTION_CLOSED_AUTH","WS_GET_MESSAGE_AUTH","ConstructorIngredient","index","moveItem","useDrop","accept","hover","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","drop","darg","styleConstructor","listItem","dragIcon","text","thumbnail","handleClose","uniqueId","typeForCounter","ConstructorBurger","history","useHistory","itemWithId","random","isOver","canDrop","backgroundColor","useCallback","constructorElement","isLocked","containerButton","disabled","listId","concat","push","success","orderData","catch","MainPage","styleMain","DndProvider","backend","HTML5Backend","ModalOverlay","children","closeAllPopups","closePopupEsc","e","key","useEffect","addEventListener","removeEventListener","target","styleOverlay","overlay","popup_opened","Modal","close","ReactDOM","createPortal","styleModal","modal","closeIcon","OrderDetails","setCounter","timer","window","setTimeout","clearTimeout","styleOrderDetails","numberOrder","doneImg","spanColor","Preloader","logoSVG","IngredientDetails","useParams","find","console","log","styleIngredientDetails","image_large","img","ul","calories","proteins","fat","carbohydrates","getNewAccessToken","message","updateUserProfile","getUserProfile","Login","logoutRequest","inputValue","setInputValue","handleChange","from","styleLogin","form","onSubmit","preventDefault","authorize","placeholder","onChange","Register","styleRegister","registerAction","ForgotPassword","goResetPassword","styleForgot","forgotPassword","ResetPassword","isResetPassword","goMainPage","styleReset","savePassword","ProfileNavigation","goLogin","styleProfileNavigation","logout","ProfileUserForm","inputName","inputEmail","inputPassword","defaultName","defaultEmail","defaultPassword","length","nameRef","loginRef","passwordRef","iconName","iconEmail","iconPassword","styleProfileForm","icon","onIconClick","focus","wsSelectors","wsData","ws","wsDataAuth","wsAuth","wsConnected","wsConnectedAuth","OrderTime","time","OrderCardIngredients","number","pathName","orderIngredients","countIngredients","orderStatus","styleOrderCardIngredients","timeOrder","orderTime","containerOrderImg","zIndex","containerPrice","OrdersHistory","orders","styleOrdersHistory","reverse","Profile","styleProfile","path","ProtectedRoute","rest","Boolean","render","Page404","style404","OrderIngredients","styleOrderIngredients","OrdersBoard","done","pending","getOrderNumbers","boardContainer","total","totalToday","FeedPage","styleFeed","OrderIngredient","ingredientPrice","styleOrderIngredient","containerDiv","ingredientName","Order","isProfile","useRouteMatch","numberOfIngredients","ingredientsWithCounter","el","getQuantityIngredients","Object","keys","values","styleOrder","totalPrice","App","closeOrderPopup","goBack","items","styleApp","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","wsActions","wsInit","wsSendMessage","onOpen","onClose","onError","onMessage","wsActionsAuth","socketMiddleware","wsUrl","socket","next","action","payload","WebSocket","onopen","event","onerror","onmessage","parsedData","restParsedData","onclose","send","initialSocketState","initialIngredientState","itemsRequest","itemsFailed","viewedIngredient","initialOrderState","orderName","orderFailed","initState","userRequest","userFailed","updateUserRequest","updateUserFailed","tokenRequest","tokenUpdate","tokenFailed","logoutFailed","registerRequest","registerFailed","loginRequest","loginFailed","forgotRequest","forgotFailed","resetRequest","resetFailed","rootReducer","combineReducers","newListIngredients","dragIngredient","splice","user","error","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","StrictMode"],"mappings":"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","file":"static/js/main.4fda8456.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"order-price_div__3AC3-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main-page_main__2bZ2Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__383Lh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"profile_section__1LJMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"profile-user-form_form__EUACb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"page-404_section__3tyzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-page_main__ofM0D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__3KsaW\",\"container\":\"app-header_container__1bpm6\",\"link\":\"app-header_link__XTUcx\",\"active_link\":\"app-header_active_link__24fa3\",\"logo\":\"app-header_logo__33HIq\",\"position\":\"app-header_position__2J0Fy\",\"buttonProfile\":\"app-header_buttonProfile__1C0gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile-navigation_container__1u8Hg\",\"list\":\"profile-navigation_list__20o4N\",\"listItem\":\"profile-navigation_listItem__29KQR\",\"link\":\"profile-navigation_link__OBIzm\",\"active_link\":\"profile-navigation_active_link__3l_aN\"};","import React from 'react';\r\nimport { Link, NavLink, useLocation } from 'react-router-dom';\r\nimport styleHeader from './app-header.module.css';\r\nimport {\r\n  Logo,\r\n  BurgerIcon,\r\n  ListIcon,\r\n  ProfileIcon,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nfunction AppHeader() {\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <header className={styleHeader.header}>\r\n      <div className={styleHeader.container}>\r\n        <div className={` pt-4  pb-4 pl-5 ${styleHeader.position}`}>\r\n          <NavLink\r\n            exact\r\n            to='/'\r\n            className={`text text_type_main-default mr-2 pr-5 ${styleHeader.link}`}\r\n            activeClassName={styleHeader.active_link}\r\n          >\r\n            <BurgerIcon type={pathname === '/' ? 'primary' : 'secondary'} />\r\n            <span className='ml-2'>Конструктор</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to='/feed'\r\n            className={`text text_type_main-default mr-2 pr-5  ${styleHeader.link}`}\r\n            activeClassName={styleHeader.active_link}\r\n          >\r\n            <ListIcon type={pathname === '/feed' ? 'primary' : 'secondary'} />\r\n            <span className='ml-2 '>Лента заказов</span>\r\n          </NavLink>\r\n        </div>\r\n        <div className={styleHeader.logo}>\r\n          <Link to={'/'}>\r\n            <Logo />\r\n          </Link>\r\n        </div>\r\n        <NavLink\r\n          to='/profile'\r\n          className={`pt-4 pb-4 pl-5 pr-5 text text_type_main-default ${styleHeader.position} ${styleHeader.buttonProfile} ${styleHeader.link}`}\r\n          activeClassName={styleHeader.active_link}\r\n        >\r\n          <ProfileIcon\r\n            type={\r\n              pathname === '/profile' || pathname === '/profile/orders'\r\n                ? 'primary'\r\n                : 'secondary'\r\n            }\r\n          />\r\n          <span className='ml-3'>Личный кабинет</span>\r\n        </NavLink>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","export const BASE_URL = 'https://norma.nomoreparties.space/api';\r\nexport const WS_URL_ALL = 'wss://norma.nomoreparties.space/orders/all';\r\nexport const WS_URL_OWNER = 'wss://norma.nomoreparties.space/orders';\r\nexport const modalRoot = document.getElementById('react-modals');\r\n\r\nexport const CONSTANTS = {\r\n  DAYS: {\r\n    DAY_US: 86400000,\r\n    TODAY: 'Сегодня,',\r\n    YESTERDAY: 'Вчера,',\r\n    FEW_DAYS: 'дня(ей) назад,'\r\n  },\r\n  EMPTY_TITLE: '',\r\n  TITLE: 'Детали ингредиента',\r\n  TITLE_PAGE: 'Детали ингредиента',\r\n  PROFILE_ROUTE: '/profile',\r\n  ORDER: {\r\n    STRUCTURE: 'Состав:',\r\n  },\r\n  ORDER_INGREDIENTS: {\r\n    TITLE: 'Лента заказов',\r\n  },\r\n  ORDER_BOARD: {\r\n    READY: 'Готовы:',\r\n    PREPARING: 'В работе:',\r\n    ALL_TIME: 'Выполнено за все время:',\r\n    TODAY: 'Выполнено за сегодня:',\r\n  },\r\n  INGREDIENT_DETAILS: {\r\n    CALORIES: 'Калории,ккал',\r\n    PROTEINS: 'Белки, г',\r\n    FAT: 'Жиры, г',\r\n    CARBOHYDRATES: 'Углеводы, г',\r\n  },\r\n  PAGE_404: {\r\n    TITLE: 404,\r\n    SUBTITLE: 'Кажется такой страницы нет :(',\r\n    BUTTON_NAME: 'Создать космо бургер',\r\n  },\r\n  PAGE_LOGIN: {\r\n    TITLE: 'Вход',\r\n    BUTTON_NAME: 'Войти',\r\n    NEW_USER: 'Вы — новый пользователь?',\r\n    REGISTER: 'Зарегистрироваться',\r\n    FORGOT_PASSWORD: 'Забыли пароль?',\r\n    RESET_PASSWORD: 'Восстановить пароль',\r\n  },\r\n  PAGE_FORGOT_PASSWORD: {\r\n    TITLE: 'Восстановление пароля',\r\n    BUTTON_NAME: 'Восстановить',\r\n    REMEMBERED_PASSWORD: 'Вспомнили пароль?',\r\n    ENTER: 'Войти',\r\n  },\r\n  PAGE_REGISTER: {\r\n    TITLE: 'Регистрация',\r\n    BUTTON_NAME: 'Зарегистрироваться',\r\n    ALREADY_REGISTERED: 'Уже зарегистрированы?',\r\n    ENTER: 'Войти',\r\n  },\r\n  PAGE_RESET_PASSWORD: {\r\n    TITLE: 'Восстановление пароля',\r\n    BUTTON_NAME: 'Сохранить',\r\n    REMEMBERED_PASSWORD: 'Вспомнили пароль?',\r\n    ENTER: 'Войти',\r\n  },\r\n};\r\n\r\nexport const QUANTITY_BUNS = 2;\r\n","export const GET_ITEMS_REQUEST: 'GET_ITEMS_REQUEST' = 'GET_ITEMS_REQUEST';\r\nexport const GET_ITEMS_SUCCESS: 'GET_ITEMS_SUCCESS' = 'GET_ITEMS_SUCCESS';\r\nexport const GET_ITEMS_ERROR: 'GET_ITEMS_ERROR' = 'GET_ITEMS_ERROR';\r\n\r\nexport const GET_VIEWED_INGREDIENT: 'GET_VIEWED_INGREDIENT' =\r\n  'GET_VIEWED_INGREDIENT';\r\n\r\nexport const ADD_INGREDIENT_CONSTRUCTOR: 'ADD_INGREDIENT_CONSTRUCTOR' =\r\n  'ADD_INGREDIENT_CONSTRUCTOR';\r\nexport const DEL_INGREDIENT_CONSTRUCTOR: 'DEL_INGREDIENT_CONSTRUCTOR' =\r\n  'DEL_INGREDIENT_CONSTRUCTOR';\r\n\r\nexport const INCREASE_INGREDIENTS: 'INCREASE_INGREDIENTS' =\r\n  'INCREASE_INGREDIENTS';\r\nexport const REDUCE_INGREDIENTS: 'REDUCE_INGREDIENTS' = 'REDUCE_INGREDIENTS';\r\n\r\nexport const DRAG_CONSTRUCTOR_INGREDIENT: 'DRAG_CONSTRUCTOR_INGREDIENT' =\r\n  'DRAG_CONSTRUCTOR_INGREDIENT';\r\n\r\nexport const CLEAR_CONSTRUCTOR_INGREDIENTS: 'CLEAR_CONSTRUCTOR_INGREDIENTS' =\r\n  'CLEAR_CONSTRUCTOR_INGREDIENTS';\r\n","import { CONSTANTS } from './constants';\r\nimport { TOrder } from '../services/type/socket';\r\nimport { ITypeIngredient } from './type-constants';\r\n\r\ntype TSetCookie = {\r\n  expires?: Date | string | number;\r\n} & {\r\n  [key: string]: number | string | boolean;\r\n};\r\nexport function setCookie(\r\n  name: string,\r\n  value: string | number | boolean,\r\n  props?: TSetCookie\r\n) {\r\n  props = props || {};\r\n  let exp = props.expires as Date;\r\n  if (typeof exp == 'number' && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + '=' + value;\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, false, { expires: -1 });\r\n}\r\n\r\nexport function getCookie(name: string) {\r\n  let matches = document.cookie.match(\r\n    new RegExp(\r\n      '(?:^|; )' + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + '=([^;]*)'\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\ntype TGetTokens = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  success: boolean;\r\n};\r\n\r\nexport const getTokens = (res: TGetTokens) => {\r\n  const accessToken = res.accessToken.split('Bearer ')[1];\r\n  const refreshToken = res.refreshToken;\r\n  setCookie('token', accessToken);\r\n  localStorage.setItem('refreshToken', refreshToken);\r\n};\r\n\r\nexport const signOut = () => {\r\n  localStorage.removeItem('refreshToken');\r\n  deleteCookie('token');\r\n};\r\n\r\nexport const delToken = () => {\r\n  deleteCookie('token');\r\n};\r\n\r\nexport const getOrderStatus = (\r\n  status: string,\r\n  style: { [key: string]: string }\r\n) => {\r\n  return status === 'done'\r\n    ? { nameStatus: 'Выполнен', colorStatus: style.doneColor }\r\n    : status === 'pending'\r\n    ? { nameStatus: 'Готовится', colorStatus: style.pendingColor }\r\n    : { nameStatus: 'Отменён', colorStatus: style.cancelledColor };\r\n};\r\n\r\nexport const getOrderIngredients = (\r\n  ingredients: string[],\r\n  allIngredients: ITypeIngredient[]\r\n) => {\r\n  return ingredients\r\n    .map((id: string) =>\r\n      allIngredients.filter((item: ITypeIngredient) => item._id === id)\r\n    )\r\n    .flat();\r\n};\r\n\r\nexport const getOrderPrice = (ingredients: ITypeIngredient[]) => {\r\n  return ingredients.reduce(\r\n    (acc: number, curr: ITypeIngredient) =>\r\n      curr.type === 'bun' ? 2 * curr.price + acc : acc + curr.price,\r\n    0\r\n  );\r\n};\r\n\r\nexport const getOrderNumbers = (orders: TOrder[]) => {\r\n  return orders.slice(0, 35).reduce(\r\n    (acc: { done: number[]; pending: number[] }, curr: TOrder) => {\r\n      curr.status === 'done'\r\n        ? acc.done.push(curr.number)\r\n        : acc.pending.push(curr.number);\r\n      return acc;\r\n    },\r\n    { done: [], pending: [] }\r\n  );\r\n};\r\n\r\nexport const getQuantityIngredients = (ingredients: string[]) => {\r\n  const ingredientsWithCounter = {};\r\n  ingredients.reduce((acc: { [key: string]: number }, el: string) => {\r\n    acc[el] = (acc[el] || 0) + 1;\r\n    return acc;\r\n  }, ingredientsWithCounter);\r\n  return ingredientsWithCounter;\r\n};\r\n\r\nconst whenWasOrderCreated = (date: Date, orderDate: Date) => {\r\n  const dateNum = Date.parse(date.toISOString().slice(0, 10));\r\n  const orderDateNum = Date.parse(orderDate.toISOString().slice(0, 10));\r\n  return dateNum - orderDateNum === 0\r\n    ? CONSTANTS.DAYS.TODAY\r\n    : (dateNum - orderDateNum) / CONSTANTS.DAYS.DAY_US === 1\r\n    ? CONSTANTS.DAYS.YESTERDAY\r\n    : `${(dateNum - orderDateNum) / CONSTANTS.DAYS.DAY_US}  ${\r\n        CONSTANTS.DAYS.FEW_DAYS\r\n      }`;\r\n};\r\n\r\nexport const getOrderDate = (order: TOrder) => {\r\n  if (order) {\r\n    const date = new Date();\r\n    const orderDate = new Date(order.createdAt);\r\n    const hours =\r\n      orderDate.getHours() > 9\r\n        ? `${orderDate.getHours()}`\r\n        : `0${orderDate.getHours()}`;\r\n    const minutes =\r\n      orderDate.getMinutes() > 9\r\n        ? `${orderDate.getMinutes()}`\r\n        : `0${orderDate.getMinutes()}`;\r\n\r\n    return `${whenWasOrderCreated(date, orderDate)} ${hours}:${minutes} i-GMT+${\r\n      (orderDate.getTimezoneOffset() * -1) / 60\r\n    }`;\r\n  }\r\n};\r\n","import {\r\n  TUserDataApi,\r\n  TResetPasswordDataApi,\r\n  TLoginDataApi,\r\n  TNewPasswordApi,\r\n} from './type-constants';\r\nimport { BASE_URL } from './constants';\r\nimport { getCookie } from './function';\r\n\r\nexport const checkResponse = (response: Response) => {\r\n  return response.ok\r\n    ? response.json()\r\n    : response.json().then((err) => Promise.reject(err));\r\n};\r\n\r\nconst headers = {\r\n  Accept: 'application/json',\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const getData = async () => {\r\n  const res = await fetch(`${BASE_URL}/ingredients`, {\r\n    method: 'GET',\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\nexport const getOrderOfNumber = async (ingredients: string[]) => {\r\n  const res = await fetch(`${BASE_URL}/orders`, {\r\n    headers: {\r\n      ...headers,\r\n      Authorization: `Bearer ${getCookie('token')}`,\r\n    },\r\n    method: 'POST',\r\n    body: JSON.stringify({ ingredients }),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\nexport const register = async ({ email, password, name }: TUserDataApi) => {\r\n  const res = await fetch(`${BASE_URL}/auth/register`, {\r\n    headers,\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({ email, password, name }),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\nexport const login = async ({ email, password }: TLoginDataApi) => {\r\n  const res = await fetch(`${BASE_URL}/auth/login`, {\r\n    headers,\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\nexport const logOut = async () => {\r\n  const res = await fetch(`${BASE_URL}/auth/logout`, {\r\n    headers,\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({ token: localStorage.refreshToken }),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\nexport const getNewToken = async () => {\r\n  const res = await fetch(`${BASE_URL}/auth/token`, {\r\n    headers,\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({ token: localStorage.refreshToken }),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\nexport const getUserInfo = async () => {\r\n  const res = await fetch(`${BASE_URL}/auth/user`, {\r\n    headers: {\r\n      ...headers,\r\n      Authorization: `Bearer ${getCookie('token')}`,\r\n    },\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\nexport const updateUserInfo = async ({\r\n  name,\r\n  email,\r\n  password,\r\n}: TUserDataApi) => {\r\n  const res = await fetch(`${BASE_URL}/auth/user`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      ...headers,\r\n      Authorization: `Bearer ${getCookie('token')}`,\r\n    },\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({ name, email, password }),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\nexport const getCodeChangePassword = async (email: TResetPasswordDataApi) => {\r\n  const res = await fetch(`${BASE_URL}/password-reset`, {\r\n    headers,\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(email),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n\r\nexport const saveNewPassword = async ({ password, token }: TNewPasswordApi) => {\r\n  const res = await fetch(`${BASE_URL}/password-reset/reset`, {\r\n    headers,\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({ password, token }),\r\n  });\r\n  return checkResponse(res);\r\n};\r\n","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook,\r\n} from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from './index';\r\n\r\n// Теперь этот хук «знает» структуру хранилища\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\n// Хук не даст отправить экшен, который ему не знаком\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\n","import { ITypeIngredient } from '../../utils/type-constants';\r\nimport { RootState } from '../type';\r\n\r\nexport const ingredientSelectors = {\r\n  ingredientsConstructor: (store: RootState) =>\r\n    store.ingredients.ingredientsConstructor,\r\n  price: (store: RootState) =>\r\n    store.ingredients.ingredientsConstructor.bun &&\r\n    store.ingredients.ingredientsConstructor.bun.price * 2 +\r\n      store.ingredients.ingredientsConstructor.ingredient.reduce(\r\n        (previousValue: number, currentValue: ITypeIngredient): number => {\r\n          return previousValue + currentValue.price;\r\n        },\r\n        0\r\n      ),\r\n  viewedIngredient: (store: RootState) => store.ingredients.viewedIngredient,\r\n  allIngredients: (store: RootState) => store.ingredients.allIngredients,\r\n  orderNumber: (store: RootState) => store.order.orderNumber,\r\n  orderRequest: (store: RootState) => store.order.orderRequest,\r\n};\r\n","import { RootState } from '../type';\r\n\r\nexport const userSelectors = {\r\n  authData: (store: RootState) => store.auth,\r\n};\r\n","import React, { FC } from 'react';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport stylePrice from './order-price.module.css';\r\n\r\ntype TPrice = {\r\n  price: string | number | null;\r\n};\r\n\r\nconst OrderPrice: FC<TPrice> = ({ price }) => {\r\n  return (\r\n    <div className={stylePrice.div}>\r\n      <span className='text text_type_digits-default'>{price}</span>\r\n      <CurrencyIcon type='primary' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderPrice;\r\n","import React, { FC, memo } from 'react';\r\nimport { Counter } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styleBurgerIngredientsCard from './burger-ingredients-card.module.css';\r\nimport { QUANTITY_BUNS } from '../../utils/constants';\r\nimport { getViewedIngredient } from '../../services/actions/ingredients';\r\nimport { useDispatch, useSelector } from '../../services/type/hooks';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ingredientSelectors } from '../../services/selectors';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { ITypeIngredient } from '../../utils/type-constants';\r\nimport { TCard } from './type';\r\nimport OrderPrice from '../order-price/order-price';\r\n\r\nconst BurgerIngredientsCard: FC<TCard<ITypeIngredient>> = ({ card }) => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { counter, bun } = useSelector(\r\n    ingredientSelectors.ingredientsConstructor\r\n  );\r\n\r\n  const [{ isDrag }, drag] = useDrag({\r\n    type: 'ingredient-menu',\r\n    item: () => card,\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const quantity =\r\n    bun && bun._id === card._id ? QUANTITY_BUNS : counter[card._id];\r\n\r\n  const opacity = isDrag ? 0.5 : 1;\r\n\r\n  function handleCardClick() {\r\n    dispatch(getViewedIngredient(card));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={drag}\r\n      style={{ opacity }}\r\n      onClick={handleCardClick}\r\n      className={`mb-10 `}\r\n    >\r\n      <Link\r\n        className={styleBurgerIngredientsCard.link}\r\n        to={{\r\n          pathname: `/ingredients/${card._id}`,\r\n          state: { background: location },\r\n        }}\r\n      >\r\n        <img src={card.image} alt={card.name} />\r\n        {quantity ? <Counter count={quantity} size='default' /> : null}\r\n        <div className={styleBurgerIngredientsCard.container}>\r\n          <OrderPrice price={card.price} />\r\n        </div>\r\n        <p className={`text text_type_main-default`}>{card.name}</p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(BurgerIngredientsCard);\r\n","import { AppThunk } from './../type/index';\r\nimport {\r\n  GET_ITEMS_REQUEST,\r\n  GET_ITEMS_SUCCESS,\r\n  GET_ITEMS_ERROR,\r\n  GET_VIEWED_INGREDIENT,\r\n  ADD_INGREDIENT_CONSTRUCTOR,\r\n  DEL_INGREDIENT_CONSTRUCTOR,\r\n  INCREASE_INGREDIENTS,\r\n  REDUCE_INGREDIENTS,\r\n  DRAG_CONSTRUCTOR_INGREDIENT,\r\n  CLEAR_CONSTRUCTOR_INGREDIENTS,\r\n} from './actions-ingredients-type';\r\nimport { getData } from '../../utils/api';\r\nimport {\r\n  ITypeIngredient,\r\n  TIngredientWithUniqueId,\r\n} from '../../utils/type-constants';\r\nimport { AppDispatch } from '../type';\r\n\r\nexport interface IGetItemsRequest {\r\n  readonly type: typeof GET_ITEMS_REQUEST;\r\n}\r\n\r\nexport interface IGetItemsSuccess {\r\n  readonly type: typeof GET_ITEMS_SUCCESS;\r\n  readonly items: Array<ITypeIngredient>;\r\n}\r\n\r\nexport interface IGetItemsError {\r\n  readonly type: typeof GET_ITEMS_ERROR;\r\n}\r\n\r\nexport interface IGetViewedIngredient {\r\n  readonly type: typeof GET_VIEWED_INGREDIENT;\r\n  readonly item: ITypeIngredient;\r\n}\r\n\r\nexport interface IAddIngredientConstructor {\r\n  readonly type: typeof ADD_INGREDIENT_CONSTRUCTOR;\r\n  readonly item: TIngredientWithUniqueId;\r\n}\r\n\r\nexport interface IDelIngredientConstructor {\r\n  readonly type: typeof DEL_INGREDIENT_CONSTRUCTOR;\r\n  readonly id: string;\r\n}\r\n\r\nexport interface IIncreaseIngredients {\r\n  readonly type: typeof INCREASE_INGREDIENTS;\r\n  readonly id: string;\r\n  readonly typeForCounter: string;\r\n}\r\n\r\nexport interface IReduceIngredient {\r\n  readonly type: typeof REDUCE_INGREDIENTS;\r\n  readonly id: string;\r\n  readonly typeForCounter: string;\r\n}\r\n\r\nexport interface IDragConstructorIngredient {\r\n  readonly type: typeof DRAG_CONSTRUCTOR_INGREDIENT;\r\n  dragIndex: number;\r\n  hoverIndex: number;\r\n}\r\n\r\nexport interface IClearConstructorIngredient {\r\n  readonly type: typeof CLEAR_CONSTRUCTOR_INGREDIENTS;\r\n}\r\n\r\nexport type TIngredientsActions =\r\n  | IGetItemsRequest\r\n  | IGetItemsSuccess\r\n  | IGetItemsError\r\n  | IGetViewedIngredient\r\n  | IAddIngredientConstructor\r\n  | IDelIngredientConstructor\r\n  | IIncreaseIngredients\r\n  | IReduceIngredient\r\n  | IDragConstructorIngredient\r\n  | IClearConstructorIngredient;\r\n\r\nexport const getViewedIngredient: AppThunk = (card: ITypeIngredient) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_VIEWED_INGREDIENT,\r\n      item: card,\r\n    });\r\n  };\r\n};\r\n\r\nexport const getItems: AppThunk = () => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_ITEMS_REQUEST,\r\n    });\r\n    getData()\r\n      .then((res) => {\r\n        if (res && res.success) {\r\n          dispatch({\r\n            type: GET_ITEMS_SUCCESS,\r\n            items: res.data,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: GET_ITEMS_ERROR,\r\n          });\r\n        }\r\n      })\r\n      .catch(() =>\r\n        dispatch({\r\n          type: GET_ITEMS_ERROR,\r\n        })\r\n      );\r\n  };\r\n};\r\n","import React, { forwardRef, memo } from 'react';\r\nimport BurgerIngredientsCard from '../burger-ingredients-card/burger-ingredients-card';\r\nimport burgerIngredientsCardList from './burger-ingredients-card-list.module.css';\r\nimport { ITypeIngredient } from '../../utils/type-constants';\r\nimport { TRef } from './type';\r\n\r\nconst BurgerIngredientsCardList = forwardRef<\r\n  HTMLDivElement,\r\n  TRef<ITypeIngredient>\r\n>(({ title, data }, ref) => {\r\n  return (\r\n    <section ref={ref}>\r\n      <h2 className='mt-0 text text_type_main-medium'>{title}</h2>\r\n      <ul className={burgerIngredientsCardList.list}>\r\n        {data.map((item: ITypeIngredient) => (\r\n          <li key={item._id} className={burgerIngredientsCardList.item}>\r\n            <BurgerIngredientsCard card={item} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default memo(BurgerIngredientsCardList);\r\n","import React, { memo, useRef, FC } from 'react';\r\nimport styleIngredients from './burger-ingredients.module.css';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport BurgerIngredientsCardList from '../burger-ingredients-card-list/burger-ingredients-card-list';\r\nimport { useSelector } from '../../services/type/hooks';\r\nimport { ingredientSelectors } from '../../services/selectors';\r\nimport { ITypeIngredient } from '../../utils/type-constants';\r\n\r\nconst BurgerIngredients: FC = () => {\r\n  const topRef = useRef<HTMLDivElement>(null);\r\n  const bunRef = useRef<HTMLDivElement>(null);\r\n  const sauceRef = useRef<HTMLDivElement>(null);\r\n  const mainRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [current, setCurrent] = React.useState('bun');\r\n  const allIngredients: ITypeIngredient[] = useSelector(\r\n    ingredientSelectors.allIngredients\r\n  );\r\n\r\n  const bun = React.useMemo(\r\n    () => allIngredients.filter((i) => i.type === 'bun'),\r\n    [allIngredients]\r\n  );\r\n\r\n  const main = React.useMemo(\r\n    () => allIngredients.filter((i) => i.type === 'main'),\r\n    [allIngredients]\r\n  );\r\n\r\n  const sauce = React.useMemo(\r\n    () => allIngredients.filter((i) => i.type === 'sauce'),\r\n    [allIngredients]\r\n  );\r\n\r\n  const onScroll = () => {\r\n    if (\r\n      sauceRef.current &&\r\n      mainRef.current &&\r\n      bunRef.current &&\r\n      topRef.current\r\n    ) {\r\n      const topDistance = topRef?.current?.getBoundingClientRect().y;\r\n      const bunYDistance = Math.abs(\r\n        topDistance - bunRef?.current?.getBoundingClientRect().y\r\n      );\r\n      const sauceYDistance = Math.abs(\r\n        topDistance - sauceRef.current.getBoundingClientRect().y\r\n      );\r\n      const mainYDistance = Math.abs(\r\n        topDistance - mainRef.current.getBoundingClientRect().y\r\n      );\r\n      const minTabDistance = Math.min(\r\n        bunYDistance,\r\n        sauceYDistance,\r\n        mainYDistance\r\n      );\r\n      const activeTab =\r\n        minTabDistance === sauceYDistance\r\n          ? 'sauce'\r\n          : minTabDistance === mainYDistance\r\n          ? 'main'\r\n          : 'bun';\r\n      setCurrent(activeTab);\r\n    }\r\n  };\r\n\r\n  const handleClick: (arg: string) => void = (current) => {\r\n    if (current === 'bun') bunRef.current?.scrollIntoView(true);\r\n    if (current === 'sauce') sauceRef.current?.scrollIntoView(true);\r\n    if (current === 'main') mainRef.current?.scrollIntoView(true);\r\n  };\r\n\r\n  return (\r\n    <section className={styleIngredients.section}>\r\n      <h1 className={`text text_type_main-large ${styleIngredients.title}`}>\r\n        Собeрите бургер\r\n      </h1>\r\n      <div className={styleIngredients.tab}>\r\n        <Tab value='bun' active={current === 'bun'} onClick={handleClick}>\r\n          Булки\r\n        </Tab>\r\n        <Tab value='sauce' active={current === 'sauce'} onClick={handleClick}>\r\n          Соусы\r\n        </Tab>\r\n        <Tab value='main' active={current === 'main'} onClick={handleClick}>\r\n          Начинки\r\n        </Tab>\r\n      </div>\r\n      <div ref={topRef} onScroll={onScroll} className={styleIngredients.scroll}>\r\n        <BurgerIngredientsCardList\r\n          ref={bunRef}\r\n          id='bun'\r\n          data={bun}\r\n          title='Булки'\r\n        />\r\n        <BurgerIngredientsCardList\r\n          ref={sauceRef}\r\n          id='sauce'\r\n          data={sauce}\r\n          title='Соусы'\r\n        />\r\n        <BurgerIngredientsCardList\r\n          ref={mainRef}\r\n          id='main'\r\n          data={main}\r\n          title='Начинки'\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default memo(BurgerIngredients);\r\n","export const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_ERROR: 'GET_ORDER_ERROR' = 'GET_ORDER_ERROR';\r\n\r\nexport const CLEAR_ORDER_NUMBER: 'CLEAR_ORDER_NUMBER' = 'CLEAR_ORDER_NUMBER';\r\n","export const FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST' =\r\n  'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS' =\r\n  'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_ERROR: 'FORGOT_PASSWORD_ERROR' =\r\n  'FORGOT_PASSWORD_ERROR';\r\n\r\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' =\r\n  'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' =\r\n  'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_ERROR: 'RESET_PASSWORD_ERROR' =\r\n  'RESET_PASSWORD_ERROR';\r\n\r\nexport const LOGIN_REQUEST: 'LOGIN_REQUEST' = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS: 'LOGIN_SUCCESS' = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR: 'LOGIN_ERROR' = 'LOGIN_ERROR';\r\n\r\nexport const REGISTER_REQUEST: 'REGISTER_REQUEST' = 'REGISTER_REQUEST';\r\nexport const REGISTER_SUCCESS: 'REGISTER_SUCCESS' = 'REGISTER_SUCCESS';\r\nexport const REGISTER_ERROR: 'REGISTER_ERROR' = 'REGISTER_ERROR';\r\n\r\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_ERROR: 'LOGOUT_ERROR' = 'LOGOUT_ERROR';\r\n\r\nexport const TOKEN_REQUEST: 'TOKEN_REQUEST' = 'TOKEN_REQUEST';\r\nexport const TOKEN_SUCCESS: 'TOKEN_SUCCESS' = 'TOKEN_SUCCESS';\r\nexport const TOKEN_ERROR: 'TOKEN_ERROR' = 'TOKEN_ERROR';\r\n\r\nexport const USER_REQUEST: 'USER_REQUEST' = 'USER_REQUEST';\r\nexport const USER_SUCCESS: 'USER_SUCCESS' = 'USER_SUCCESS';\r\nexport const USER_ERROR: 'USER_ERROR' = 'USER_ERROR';\r\n\r\nexport const USER_UPDATE_REQUEST: 'USER_UPDATE_REQUEST' = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS: 'USER_UPDATE_SUCCESS' = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_ERROR: 'USER_UPDATE_ERROR' = 'USER_UPDATE_ERROR';\r\n","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' =\r\n  'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' =\r\n  'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\n\r\nexport const WS_CONNECTION_START_AUTH: 'WS_CONNECTION_START_AUTH' =\r\n  'WS_CONNECTION_START_AUTH';\r\nexport const WS_CONNECTION_SUCCESS_AUTH: 'WS_CONNECTION_SUCCESS_AUTH' =\r\n  'WS_CONNECTION_SUCCESS_AUTH';\r\nexport const WS_CONNECTION_ERROR_AUTH: 'WS_CONNECTION_ERROR_AUTH' =\r\n  'WS_CONNECTION_ERROR_AUTH';\r\nexport const WS_CONNECTION_CLOSED_AUTH: 'WS_CONNECTION_CLOSED_AUTH' =\r\n  'WS_CONNECTION_CLOSED_AUTH';\r\nexport const WS_GET_MESSAGE_AUTH: 'WS_GET_MESSAGE_AUTH' = 'WS_GET_MESSAGE_AUTH';\r\nexport const WS_SEND_MESSAGE_AUTH: 'WS_SEND_MESSAGE_AUTH' =\r\n  'WS_SEND_MESSAGE_AUTH';\r\n","import {\r\n  ConstructorElement,\r\n  DragIcon,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport React, { useRef, FC } from 'react';\r\nimport { useDrag, useDrop, XYCoord } from 'react-dnd';\r\nimport { useDispatch } from '../../services/type/hooks';\r\nimport {\r\n  DEL_INGREDIENT_CONSTRUCTOR,\r\n  REDUCE_INGREDIENTS,\r\n} from '../../services/actions/actions-ingredients-type';\r\nimport { TIngredientWithUniqueId } from '../../utils/type-constants';\r\nimport styleConstructor from './constructor-ingredient.module.css';\r\nimport { TConstructorIndex, TConstructorIngredientProps } from './type';\r\n\r\nconst ConstructorIngredient: FC<\r\n  TConstructorIngredientProps<TIngredientWithUniqueId>\r\n> = ({ ingredient, index, id, moveItem }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const ref = useRef<HTMLLIElement>(null);\r\n  const [, drop] = useDrop({\r\n    accept: 'ingredient-constructor',\r\n    hover: (item: TConstructorIndex, monitor) => {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      const clientOffset = monitor.getClientOffset();\r\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n      moveItem(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, darg] = useDrag({\r\n    type: 'ingredient-constructor',\r\n    item: () => {\r\n      return { id, index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  darg(drop(ref));\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  return (\r\n    <li ref={ref} style={{ opacity }} className={styleConstructor.listItem}>\r\n      <div className={styleConstructor.dragIcon}>\r\n        <DragIcon type='primary' />\r\n      </div>\r\n      <ConstructorElement\r\n        text={ingredient.name}\r\n        price={ingredient.price}\r\n        thumbnail={ingredient.image}\r\n        handleClose={() => {\r\n          dispatch({\r\n            type: DEL_INGREDIENT_CONSTRUCTOR,\r\n            id: ingredient.uniqueId,\r\n          });\r\n          dispatch({\r\n            type: REDUCE_INGREDIENTS,\r\n            id: ingredient._id,\r\n            typeForCounter: ingredient.type,\r\n          });\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ConstructorIngredient;\r\n","import React, { useCallback, FC } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  ConstructorElement,\r\n  CurrencyIcon,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styleConstructor from './burger-constructor.module.css';\r\nimport { useDispatch, useSelector } from '../../services/type/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport {\r\n  ADD_INGREDIENT_CONSTRUCTOR,\r\n  CLEAR_ORDER_NUMBER,\r\n  GET_ORDER_REQUEST,\r\n  INCREASE_INGREDIENTS,\r\n} from '../../services/actions';\r\nimport { ingredientSelectors } from '../../services/selectors';\r\nimport ConstructorIngredient from '../constructor-ingredient/constructor-ingredient';\r\nimport { DRAG_CONSTRUCTOR_INGREDIENT } from '../../services/actions';\r\nimport { getOrder } from '../../services/actions/order';\r\nimport { useHistory } from 'react-router';\r\nimport { TIngredientWithUniqueId } from '../../utils/type-constants';\r\n\r\nconst ConstructorBurger: FC = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { bun, ingredient } = useSelector(\r\n    ingredientSelectors.ingredientsConstructor\r\n  );\r\n  const orderRequest = useSelector(ingredientSelectors.orderRequest);\r\n  const refreshToken = localStorage.refreshToken;\r\n  const price = useSelector(ingredientSelectors.price);\r\n  const dispatch = useDispatch();\r\n\r\n  const [{ canDrop, isOver }, drop] = useDrop(() => ({\r\n    accept: 'ingredient-menu',\r\n    drop: (item: TIngredientWithUniqueId) => {\r\n      dispatch({ type: GET_ORDER_REQUEST });\r\n      const itemWithId = { ...item, uniqueId: Math.random() };\r\n      dispatch({\r\n        type: ADD_INGREDIENT_CONSTRUCTOR,\r\n        item: itemWithId,\r\n      });\r\n      dispatch({\r\n        type: INCREASE_INGREDIENTS,\r\n        id: itemWithId._id,\r\n        typeForCounter: itemWithId.type,\r\n      });\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  }));\r\n\r\n  const isActive = canDrop && isOver;\r\n\r\n  const backgroundColor =\r\n    (isActive && 'rgba(45, 45, 55, 1)') ||\r\n    (canDrop && 'rgba(30, 30, 55, 1)') ||\r\n    '';\r\n\r\n  const moveItem = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      dispatch({\r\n        type: DRAG_CONSTRUCTOR_INGREDIENT,\r\n        dragIndex: dragIndex,\r\n        hoverIndex: hoverIndex,\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  function handleClick() {\r\n    dispatch({ type: GET_ORDER_REQUEST });\r\n    let id: string[] = [];\r\n    if (bun !== null) {\r\n      id = ingredient\r\n        .map((item: TIngredientWithUniqueId) => {\r\n          return item._id;\r\n        })\r\n        .concat(bun._id);\r\n    }\r\n    if (refreshToken) {\r\n      history.push({\r\n        pathname: '/order-modal',\r\n        state: {\r\n          background: location,\r\n        },\r\n      });\r\n      dispatch(getOrder(id));\r\n      dispatch({ type: CLEAR_ORDER_NUMBER });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={styleConstructor.section}>\r\n      <div\r\n        ref={drop}\r\n        style={{ backgroundColor }}\r\n        className={styleConstructor.constructorElement}\r\n      >\r\n        {bun && (\r\n          <ConstructorElement\r\n            type='top'\r\n            isLocked={true}\r\n            text={`${bun.name} (верх)`}\r\n            price={bun.price}\r\n            thumbnail={bun.image}\r\n          />\r\n        )}\r\n\r\n        <ul className={styleConstructor.list}>\r\n          {ingredient.map(\r\n            (ingredient: TIngredientWithUniqueId, index: number) => {\r\n              return (\r\n                <ConstructorIngredient\r\n                  moveItem={moveItem}\r\n                  id={ingredient._id}\r\n                  index={index}\r\n                  ingredient={ingredient}\r\n                  key={ingredient.uniqueId}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </ul>\r\n        {bun && (\r\n          <ConstructorElement\r\n            type='bottom'\r\n            isLocked={true}\r\n            text={`${bun.name} (низ)`}\r\n            price={bun.price}\r\n            thumbnail={bun.image}\r\n          />\r\n        )}\r\n      </div>\r\n      {bun && (\r\n        <div className={styleConstructor.containerButton}>\r\n          <div className='mr-10'>\r\n            <span className='mr-2 text text_type_digits-medium'>{price}</span>\r\n            <CurrencyIcon type='primary' />\r\n          </div>\r\n          <Button\r\n            disabled={!orderRequest}\r\n            onClick={handleClick}\r\n            type='primary'\r\n            size='large'\r\n          >\r\n            Оформить заказ\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ConstructorBurger;\r\n","import { AppDispatch, AppThunk } from './../type/index';\r\nimport { TOrderData } from './../type/data';\r\nimport { IClearConstructorIngredient } from './ingredients';\r\nimport {\r\n  GET_ORDER_ERROR,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  CLEAR_CONSTRUCTOR_INGREDIENTS,\r\n  CLEAR_ORDER_NUMBER,\r\n} from '.';\r\nimport { getOrderOfNumber } from '../../utils/api';\r\n\r\nexport interface IGetOrderError {\r\n  readonly type: typeof GET_ORDER_ERROR;\r\n}\r\n\r\nexport interface IGetOrderRequest {\r\n  readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\n\r\nexport interface IGetOrderErrorSuccess {\r\n  readonly type: typeof GET_ORDER_SUCCESS;\r\n  readonly orderData: TOrderData;\r\n}\r\n\r\n\r\nexport interface IClearOrderNumber {\r\n  readonly type: typeof CLEAR_ORDER_NUMBER;\r\n}\r\n\r\nexport type TOrderActions =\r\n  | IGetOrderError\r\n  | IGetOrderRequest\r\n  | IGetOrderErrorSuccess\r\n  | IClearConstructorIngredient\r\n  | IClearOrderNumber\r\n\r\nexport const  getOrder: AppThunk = (listId: string[]) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_ORDER_REQUEST,\r\n    });\r\n    getOrderOfNumber(listId)\r\n      .then((res) => {\r\n        if (res && res.success) {\r\n          dispatch({\r\n            type: GET_ORDER_SUCCESS,\r\n            orderData: res,\r\n          });\r\n          dispatch({\r\n            type: CLEAR_CONSTRUCTOR_INGREDIENTS,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: GET_ORDER_ERROR,\r\n          });\r\n        }\r\n      })\r\n      .catch(() =>\r\n        dispatch({\r\n          type: GET_ORDER_ERROR,\r\n        })\r\n      );\r\n  };\r\n}\r\n","import React, { memo } from 'react';\r\nimport BurgerIngredients from '../../components/burger-ingredients/burger-ingredients';\r\nimport ConstructorBurger from '../../components/burger-constructor/burger-constructor';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport styleMain from './main-page.module.css';\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <main className={styleMain.main}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <BurgerIngredients />\r\n        <ConstructorBurger />\r\n      </DndProvider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default memo(MainPage);\r\n","import React, { FC, SyntheticEvent, useEffect } from 'react';\r\nimport styleOverlay from './modal-overlay.module.css';\r\nimport { TModalOverlay } from './type';\r\n\r\nconst ModalOverlay: FC<TModalOverlay> = ({ children, closeAllPopups }) => {\r\n  function closePopupClickOnOverlay(e: SyntheticEvent) {\r\n    const element = e.target as Element;\r\n    if (element.matches('.popup')) {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  function closePopupEsc(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', closePopupEsc);\r\n    return () => document.removeEventListener('keydown', closePopupEsc);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      onClick={closePopupClickOnOverlay}\r\n      className={`popup ${styleOverlay.overlay} ${styleOverlay.popup_opened}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalOverlay;\r\n","import { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ReactDOM from 'react-dom';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport styleModal from './modal.module.css';\r\nimport { modalRoot } from '../../utils/constants';\r\nimport { FC } from 'react';\r\nimport { TModal } from './type';\r\n\r\nconst Modal: FC<TModal> = ({ close, title, children }) => {\r\n  return (\r\n    modalRoot && \r\n    ReactDOM.createPortal(\r\n      <ModalOverlay closeAllPopups={close}>\r\n        <div\r\n          id='modal'\r\n          className={`${styleModal.modal} pt-10 pl-10 pb-10 pr-10`}\r\n        >\r\n          {title && (\r\n            <h2 className={`text text_type_main-large ${styleModal.title}`}>\r\n              {title}\r\n            </h2>\r\n          )}\r\n          <div onClick={close} className={styleModal.closeIcon}>\r\n            <CloseIcon type={'primary'} />\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </ModalOverlay>,\r\n      modalRoot\r\n    )\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/done.498a3c13.svg\";","import React, { FC } from 'react';\r\nimport doneImg from '../../images/svg/done.svg';\r\nimport styleOrderDetails from './order-details.module.css';\r\nimport { ingredientSelectors } from '../../services/selectors';\r\nimport { useSelector } from '../../services/type/hooks';\r\n\r\nconst OrderDetails: FC = () => {\r\n  const [counter, setCounter] = React.useState(15);\r\n  React.useEffect(() => {\r\n    let timer: number;\r\n    if (counter > 0) {\r\n      timer = window.setTimeout(\r\n        () => setCounter((counter) => counter - 1),\r\n        1000\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, [counter]);\r\n\r\n  const orderNumber = useSelector(ingredientSelectors.orderNumber);\r\n\r\n  return (\r\n    <section className={`pr-15 pb-15 pl-15 ${styleOrderDetails.section}`}>\r\n      {counter > 0 && (\r\n        <h3\r\n          className={`mt-4 text text_type_digits-large ${styleOrderDetails.numberOrder}`}\r\n        >\r\n          {counter}\r\n        </h3>\r\n      )}\r\n      {orderNumber && (\r\n        <h3\r\n          className={`mt-4 text text_type_digits-large ${styleOrderDetails.numberOrder}`}\r\n        >\r\n          {orderNumber}\r\n        </h3>\r\n      )}\r\n      <p className='mt-8 text text_type_main-medium'>\r\n        {orderNumber ? 'идентификатор заказа' : 'до готовности заказа'}\r\n      </p>\r\n      <img src={doneImg}  className='mt-15 mb-15' alt='Заказ готовится' />\r\n      <p className='mb-2 text text_type_main-default'>\r\n        {orderNumber ? 'Ваш заказ готов' : 'Ваш заказ начали готовить'}\r\n      </p>\r\n      <span\r\n        className={` text text_type_main-default ${styleOrderDetails.spanColor}`}\r\n      >\r\n        {orderNumber\r\n          ? 'Пожалуйста, пройдите в зону выдачи заказов '\r\n          : 'Дождитесь готовности на орбитальной станции'}\r\n      </span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","export default __webpack_public_path__ + \"static/media/logo.537177ec.svg\";","import React from 'react';\r\nimport logoSVG from '../../images/svg/logo.svg';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='preloader'>\r\n      <div className='preloader__container'>\r\n        <img  className=\"preloader__round\" src={logoSVG} alt='Загрузка...' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import { FC, memo } from 'react';\r\nimport { CONSTANTS } from '../../utils/constants';\r\nimport styleIngredientDetails from './ingredient-details.module.css';\r\nimport { useSelector } from '../../services/type/hooks';\r\nimport { ingredientSelectors } from '../../services/selectors';\r\nimport { useParams } from 'react-router';\r\nimport { TIngredientDetails } from './type';\r\nimport { ITypeIngredient } from '../../utils/type-constants';\r\nimport Preloader from '../Preloader/Preloader';\r\n\r\nconst IngredientDetails: FC<TIngredientDetails> = ({ title }) => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const card: ITypeIngredient = useSelector(\r\n    ingredientSelectors.allIngredients\r\n  ).find((i: ITypeIngredient) => i._id === id) as ITypeIngredient;\r\n\r\n  console.log(card);\r\n\r\n  return card ? (\r\n    <section className={styleIngredientDetails.section}>\r\n      {title && (\r\n        <h2\r\n          className={`text text_type_main-large ${styleIngredientDetails.title}`}\r\n        >\r\n          {title}\r\n        </h2>\r\n      )}\r\n      <img\r\n        src={card.image_large}\r\n        alt={card.name}\r\n        className={styleIngredientDetails.img}\r\n      />\r\n      <p className='mt-4 mb-8 text text_type_main-medium'>{card.name}</p>\r\n      <ul className={styleIngredientDetails.ul}>\r\n        <li>\r\n          <h5 className='text text_type_main-default'>\r\n            {CONSTANTS.INGREDIENT_DETAILS.CALORIES}\r\n          </h5>\r\n          <p className='mt-2 text text_type_digits-default'>{card.calories}</p>\r\n        </li>\r\n        <li>\r\n          <h5 className='text text_type_main-default'>\r\n            {CONSTANTS.INGREDIENT_DETAILS.PROTEINS}\r\n          </h5>\r\n          <p className='mt-2 text text_type_digits-default'>{card.proteins}</p>\r\n        </li>\r\n        <li>\r\n          <h5 className='text text_type_main-default'>\r\n            {CONSTANTS.INGREDIENT_DETAILS.FAT}\r\n          </h5>\r\n          <p className='mt-2 text text_type_digits-default'>{card.fat}</p>\r\n        </li>\r\n        <li>\r\n          <h5 className='text text_type_main-default'>\r\n            {CONSTANTS.INGREDIENT_DETAILS.CARBOHYDRATES}\r\n          </h5>\r\n          <p className='mt-2 text text_type_digits-default'>\r\n            {card.carbohydrates}\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  ) : (\r\n    <Preloader />\r\n  );\r\n};\r\n\r\nexport default memo(IngredientDetails);\r\n","import { AppThunk, AppDispatch } from './../type/index';\r\nimport { TUserData, TUserDataWithToken } from './../type/data';\r\nimport { TFuncVoid, TNewPasswordApi } from './../../utils/type-constants';\r\nimport {\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_ERROR,\r\n  RESET_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_ERROR,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_ERROR,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_ERROR,\r\n  TOKEN_REQUEST,\r\n  TOKEN_SUCCESS,\r\n  TOKEN_ERROR,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_ERROR,\r\n  USER_REQUEST,\r\n  USER_SUCCESS,\r\n  USER_ERROR,\r\n} from '.';\r\nimport {\r\n  getCodeChangePassword,\r\n  saveNewPassword,\r\n  login,\r\n  register,\r\n  getNewToken,\r\n  logOut,\r\n  getUserInfo,\r\n  updateUserInfo,\r\n} from '../../utils/api';\r\nimport { getTokens, signOut } from '../../utils/function';\r\n\r\nexport interface IForgotPasswordRequest {\r\n  readonly type: typeof FORGOT_PASSWORD_REQUEST;\r\n}\r\nexport interface IForgotPasswordSuccess {\r\n  readonly type: typeof FORGOT_PASSWORD_SUCCESS;\r\n}\r\n\r\nexport interface IForgotPasswordError {\r\n  readonly type: typeof FORGOT_PASSWORD_ERROR;\r\n}\r\n\r\nexport interface IResetPasswordRequest {\r\n  readonly type: typeof RESET_PASSWORD_REQUEST;\r\n}\r\n\r\nexport interface IResetPasswordSuccess {\r\n  readonly type: typeof RESET_PASSWORD_SUCCESS;\r\n}\r\n\r\nexport interface IResetPasswordError {\r\n  readonly type: typeof RESET_PASSWORD_ERROR;\r\n}\r\n\r\nexport interface ILoginRequest {\r\n  readonly type: typeof LOGIN_REQUEST;\r\n}\r\n\r\nexport interface ILoginSuccess {\r\n  readonly type: typeof LOGIN_SUCCESS;\r\n  readonly data: TUserDataWithToken;\r\n}\r\n\r\nexport interface ILoginError {\r\n  readonly type: typeof LOGIN_ERROR;\r\n}\r\n\r\nexport interface IRegisterRequest {\r\n  readonly type: typeof REGISTER_REQUEST;\r\n}\r\n\r\nexport interface IRegisterSuccess {\r\n  readonly type: typeof REGISTER_SUCCESS;\r\n  readonly data: TUserDataWithToken;\r\n}\r\n\r\nexport interface IRegisterError {\r\n  readonly type: typeof REGISTER_ERROR;\r\n}\r\n\r\nexport interface ILogoutRequest {\r\n  readonly type: typeof LOGOUT_REQUEST;\r\n}\r\n\r\nexport interface ILogoutSuccess {\r\n  readonly type: typeof LOGOUT_SUCCESS;\r\n}\r\n\r\nexport interface ILogoutError {\r\n  readonly type: typeof LOGOUT_ERROR;\r\n}\r\n\r\nexport interface ITokenRequest {\r\n  readonly type: typeof TOKEN_REQUEST;\r\n}\r\n\r\nexport interface ITokenSuccess {\r\n  readonly type: typeof TOKEN_SUCCESS;\r\n}\r\n\r\nexport interface ITokenError {\r\n  readonly type: typeof TOKEN_ERROR;\r\n}\r\n\r\nexport interface IUserUpdateRequest {\r\n  readonly type: typeof USER_UPDATE_REQUEST;\r\n}\r\n\r\nexport interface IUserUpdateSuccess {\r\n  readonly type: typeof USER_UPDATE_SUCCESS;\r\n  readonly data: TUserData;\r\n}\r\n\r\nexport interface IUserUpdateError {\r\n  readonly type: typeof USER_UPDATE_ERROR;\r\n}\r\n\r\nexport interface IUserRequest {\r\n  readonly type: typeof USER_REQUEST;\r\n}\r\n\r\nexport interface IUserSuccess {\r\n  readonly type: typeof USER_SUCCESS;\r\n  readonly data: TUserData;\r\n}\r\n\r\nexport interface IUserError {\r\n  readonly type: typeof USER_ERROR;\r\n}\r\n\r\nexport type TAuthActions =\r\n  | IForgotPasswordRequest\r\n  | IForgotPasswordSuccess\r\n  | IForgotPasswordError\r\n  | IResetPasswordRequest\r\n  | IResetPasswordSuccess\r\n  | IResetPasswordError\r\n  | ILoginRequest\r\n  | ILoginSuccess\r\n  | ILoginError\r\n  | IRegisterRequest\r\n  | IRegisterSuccess\r\n  | IRegisterError\r\n  | ILogoutRequest\r\n  | ILogoutSuccess\r\n  | ILogoutError\r\n  | ITokenRequest\r\n  | ITokenSuccess\r\n  | ITokenError\r\n  | IUserUpdateRequest\r\n  | IUserUpdateSuccess\r\n  | IUserUpdateError\r\n  | IUserRequest\r\n  | IUserSuccess\r\n  | IUserError;\r\n\r\nexport const logout: AppThunk = (goLogin: TFuncVoid) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({ type: LOGOUT_REQUEST });\r\n    logOut()\r\n      .then((res) => {\r\n        if (res && res.success) {\r\n          signOut();\r\n          dispatch({ type: LOGOUT_SUCCESS });\r\n          goLogin();\r\n        } else {\r\n          dispatch({ type: LOGOUT_ERROR });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.message);\r\n        dispatch({ type: LOGOUT_ERROR });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getNewAccessToken: AppThunk = () => {\r\n  return function (dispatch) {\r\n    dispatch({ type: TOKEN_REQUEST });\r\n    getNewToken()\r\n      .then((res) => {\r\n        getTokens(res);\r\n        if (res && res.success) {\r\n          dispatch({ type: TOKEN_SUCCESS });\r\n        } else {\r\n          dispatch({ type: TOKEN_ERROR });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (\r\n          err.message === 'jwt expired' ||\r\n          err.message === 'Token is invalid' ||\r\n          err.message === 'jwt malformed'\r\n        ) {\r\n          dispatch(getNewAccessToken());\r\n        } else console.log(err, err.message);\r\n        signOut();\r\n        dispatch({ type: TOKEN_ERROR });\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateUserProfile: AppThunk = ({\r\n  name,\r\n  email,\r\n  password,\r\n}: {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}) => {\r\n  return function (dispatch) {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n    updateUserInfo({ name, email, password })\r\n      .then((res) => {\r\n        if (res && res.success) {\r\n          dispatch({ type: USER_UPDATE_SUCCESS, data: res });\r\n        } else {\r\n          dispatch({ type: USER_UPDATE_ERROR });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (\r\n          err.message === 'jwt expired' ||\r\n          err.message === 'Token is invalid' ||\r\n          err.message === 'jwt malformed'\r\n        ) {\r\n          dispatch(getNewAccessToken());\r\n          dispatch(updateUserProfile({ name, email, password }));\r\n        }\r\n\r\n        dispatch({ type: USER_UPDATE_ERROR });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUserProfile: AppThunk = () => {\r\n  return function (dispatch) {\r\n    dispatch({ type: USER_REQUEST });\r\n\r\n    getUserInfo()\r\n      .then((res) => {\r\n        if (res && res.success) {\r\n          dispatch({ type: USER_SUCCESS, data: res });\r\n        } else {\r\n          dispatch({ type: USER_ERROR });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (\r\n          err.message === 'jwt expired' ||\r\n          err.message === 'Token is invalid' ||\r\n          err.message === 'jwt malformed'\r\n        ) {\r\n          dispatch(getNewAccessToken());\r\n          dispatch(getUserProfile());\r\n        } else console.log(err.message);\r\n        dispatch({ type: USER_ERROR });\r\n      });\r\n  };\r\n};\r\n\r\nexport const registerAction: AppThunk = ({\r\n  name,\r\n  email,\r\n  password,\r\n}: {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({ type: REGISTER_REQUEST });\r\n    register({ name, email, password })\r\n      .then((res) => {\r\n        getTokens(res);\r\n        if (res && res.success) {\r\n          dispatch({ type: REGISTER_SUCCESS, data: res });\r\n        } else {\r\n          dispatch({ type: REGISTER_ERROR });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.message);\r\n        dispatch({ type: REGISTER_ERROR });\r\n      });\r\n  };\r\n};\r\n\r\nexport const authorize: AppThunk = ({\r\n  email,\r\n  password,\r\n}: {\r\n  email: string;\r\n  password: string;\r\n}) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({ type: LOGIN_REQUEST });\r\n    login({ email, password })\r\n      .then((res) => {\r\n        getTokens(res);\r\n        if (res && res.success) {\r\n          dispatch({ type: LOGIN_SUCCESS, data: res });\r\n        } else {\r\n          dispatch({ type: LOGIN_ERROR });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.message);\r\n        dispatch({ type: LOGIN_ERROR });\r\n      });\r\n  };\r\n};\r\n\r\nexport const forgotPassword: AppThunk = (\r\n  email: string,\r\n  goResetPassword: TFuncVoid\r\n) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({ type: FORGOT_PASSWORD_REQUEST });\r\n    getCodeChangePassword(email)\r\n      .then((res) => {\r\n        if (res && res.success) {\r\n          dispatch({ type: FORGOT_PASSWORD_SUCCESS });\r\n          goResetPassword();\r\n        } else {\r\n          dispatch({ type: FORGOT_PASSWORD_ERROR });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.message);\r\n        dispatch({ type: FORGOT_PASSWORD_ERROR });\r\n      });\r\n  };\r\n};\r\n\r\nexport const savePassword: AppThunk = (\r\n  data: TNewPasswordApi,\r\n  goMainPage: TFuncVoid\r\n) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({ type: RESET_PASSWORD_REQUEST });\r\n    saveNewPassword(data)\r\n      .then((res) => {\r\n        if (res && res.success) {\r\n          dispatch({ type: RESET_PASSWORD_SUCCESS });\r\n          goMainPage();\r\n        } else {\r\n          dispatch({ type: RESET_PASSWORD_ERROR });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.message);\r\n        dispatch({ type: RESET_PASSWORD_ERROR });\r\n      });\r\n  };\r\n};\r\n","import React, { SyntheticEvent, useState } from 'react';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styleLogin from './login.module.css';\r\nimport { authorize } from '../../services/actions/auth';\r\nimport { useDispatch, useSelector } from '../../services/type/hooks';\r\nimport { userSelectors } from '../../services/selectors';\r\nimport { CONSTANTS } from '../../utils/constants';\r\n\r\nexport const Login = () => {\r\n  const { logoutRequest } = useSelector(userSelectors.authData);\r\n  const refreshToken = localStorage.refreshToken;\r\n  const location = useLocation();\r\n  const [inputValue, setInputValue] = useState({ email: '', password: '' });\r\n  const dispatch = useDispatch();\r\n  const handleChange = (e: { target: HTMLInputElement }) => {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setInputValue({ ...inputValue, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(authorize(inputValue));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {refreshToken && !logoutRequest ? (\r\n        <Redirect to={location.state?.from || '/'} />\r\n      ) : (\r\n        <section className={styleLogin.container}>\r\n          <h2 className='text text_type_main-medium mb-6'>\r\n            {CONSTANTS.PAGE_LOGIN.TITLE}\r\n          </h2>\r\n          <form className={styleLogin.form} onSubmit={handleSubmit}>\r\n            <Input\r\n              placeholder='E-mail'\r\n              type='email'\r\n              name='email'\r\n              value={inputValue.email || ''}\r\n              onChange={handleChange}\r\n            />\r\n            <PasswordInput\r\n              name='password'\r\n              value={inputValue.password || ''}\r\n              onChange={handleChange}\r\n            />\r\n            <Button type='primary' size='medium'>\r\n              {CONSTANTS.PAGE_LOGIN.BUTTON_NAME}\r\n            </Button>\r\n          </form>\r\n          <div className={styleLogin.text}>\r\n            <span className='text text_type_main-default text_color_inactive'>\r\n              {CONSTANTS.PAGE_LOGIN.NEW_USER}{' '}\r\n              <Link to='/register' className={styleLogin.link}>\r\n                {CONSTANTS.PAGE_LOGIN.REGISTER}\r\n              </Link>\r\n            </span>\r\n            <span className='text text_type_main-default text_color_inactive'>\r\n              {CONSTANTS.PAGE_LOGIN.FORGOT_PASSWORD}{' '}\r\n              <Link to='/forgot-password' className={styleLogin.link}>\r\n                {CONSTANTS.PAGE_LOGIN.RESET_PASSWORD}\r\n              </Link>\r\n            </span>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { SyntheticEvent, useState } from 'react';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styleRegister from './register.module.css';\r\nimport { useDispatch, useSelector }  from '../../services/type/hooks';\r\nimport { registerAction } from '../../services/actions/auth';\r\nimport { userSelectors } from '../../services/selectors';\r\nimport { CONSTANTS } from '../../utils/constants';\r\n\r\nexport const Register = () => {\r\n  const [inputValue, setInputValue] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const refreshToken = localStorage.refreshToken;\r\n  const { logoutRequest } = useSelector(userSelectors.authData);\r\n  const location = useLocation();\r\n  const handleChange = (e: {target: HTMLInputElement}) => {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setInputValue({ ...inputValue, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(registerAction(inputValue));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {refreshToken && !logoutRequest ? (\r\n        <Redirect to={location.state?.from || '/'} />\r\n      ) : (\r\n        <section className={styleRegister.container}>\r\n          <h2 className='text text_type_main-medium mb-6'>\r\n            {CONSTANTS.PAGE_REGISTER.TITLE}\r\n          </h2>\r\n          <form className={styleRegister.form} onSubmit={handleSubmit}>\r\n            <Input\r\n              placeholder='Имя'\r\n              type='text'\r\n              name='name'\r\n              value={inputValue.name || ''}\r\n              onChange={handleChange}\r\n            />\r\n            <Input\r\n              placeholder='E-mail'\r\n              type='email'\r\n              name='email'\r\n              value={inputValue.email || ''}\r\n              onChange={handleChange}\r\n            />\r\n            <PasswordInput\r\n              name='password'\r\n              value={inputValue.password || ''}\r\n              onChange={handleChange}\r\n            />\r\n            <Button type='primary' size='medium'>\r\n              {CONSTANTS.PAGE_REGISTER.BUTTON_NAME}\r\n            </Button>\r\n          </form>\r\n          <div className={styleRegister.text}>\r\n            <span className='text text_type_main-default text_color_inactive'>\r\n              {CONSTANTS.PAGE_REGISTER.ALREADY_REGISTERED}{' '}\r\n              <Link to='/login' className={styleRegister.link}>\r\n                {CONSTANTS.PAGE_REGISTER.ENTER}\r\n              </Link>\r\n            </span>\r\n          </div>\r\n        </section>\r\n      )}{' '}\r\n    </>\r\n  );\r\n};\r\n","import React, { SyntheticEvent, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport {\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styleForgot from './forgot-password.module.css';\r\nimport { forgotPassword } from '../../services/actions/auth';\r\nimport { CONSTANTS } from '../../utils/constants';\r\nimport { useDispatch } from '../../services/type/hooks';\r\n\r\nexport const ForgotPassword = () => {\r\n  const [inputValue, setInputValue] = useState({\r\n    email: '',\r\n  });\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const refreshToken = localStorage.refreshToken;\r\n  const handleChange = (e: { target: HTMLInputElement }) => {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setInputValue({ ...inputValue, [name]: value });\r\n  };\r\n\r\n  const goResetPassword = () => {\r\n    history.push('/reset-password');\r\n  };\r\n\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(forgotPassword(inputValue, goResetPassword));\r\n  };\r\n\r\n  if (refreshToken) {\r\n    return <Redirect to='/' />;\r\n  }\r\n  return (\r\n    <section className={styleForgot.container}>\r\n      <h2 className='text text_type_main-medium mb-6'>\r\n        {CONSTANTS.PAGE_FORGOT_PASSWORD.TITLE}\r\n      </h2>\r\n      <form className={styleForgot.form} onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder='Укажите e-mail'\r\n          type='email'\r\n          name='email'\r\n          value={inputValue.email || ''}\r\n          onChange={handleChange}\r\n        />\r\n        <Button disabled={!inputValue.email} type='primary' size='medium'>\r\n          {CONSTANTS.PAGE_FORGOT_PASSWORD.BUTTON_NAME}\r\n        </Button>\r\n      </form>\r\n      <div className={styleForgot.text}>\r\n        <span className='text text_type_main-default text_color_inactive'>\r\n          {CONSTANTS.PAGE_FORGOT_PASSWORD.REMEMBERED_PASSWORD}{' '}\r\n          <Link to='/login' className={styleForgot.link}>\r\n            {CONSTANTS.PAGE_FORGOT_PASSWORD.ENTER}\r\n          </Link>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { SyntheticEvent, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport {\r\n  Input,\r\n  Button,\r\n  PasswordInput,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styleReset from './reset-password.module.css';\r\nimport { savePassword } from '../../services/actions/auth';\r\nimport { useDispatch, useSelector }  from '../../services/type/hooks';\r\nimport { userSelectors } from '../../services/selectors';\r\nimport { CONSTANTS } from '../../utils/constants';\r\n\r\nexport const ResetPassword = () => {\r\n  const [inputValue, setInputValue] = useState({\r\n    password: '',\r\n    token: '',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const { isResetPassword } = useSelector(userSelectors.authData);\r\n  const refreshToken = localStorage.refreshToken;\r\nconst history = useHistory()\r\n  const handleChange = (e: {target: HTMLInputElement}) => {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setInputValue({ ...inputValue, [name]: value });\r\n  };\r\n\r\n  const goMainPage = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(savePassword(inputValue, goMainPage));\r\n  };\r\n\r\n  if (!isResetPassword) {\r\n    return <Redirect to='/forgot-password' />;\r\n  } else if (refreshToken) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <section className={styleReset.container}>\r\n      <h2 className='text text_type_main-medium mb-6'>  {CONSTANTS.PAGE_RESET_PASSWORD.TITLE}</h2>\r\n      <form className={styleReset.form} onSubmit={handleSubmit}>\r\n        <PasswordInput\r\n          name='password'\r\n          value={inputValue.password || ''}\r\n          onChange={handleChange}\r\n          size={'default'}\r\n        />\r\n        <Input\r\n          placeholder='Введите код из письма'\r\n          type='text'\r\n          name='token'\r\n          value={inputValue.token || ''}\r\n          onChange={handleChange}\r\n          size={'default'}\r\n        />\r\n        <Button type='primary' size='medium'>\r\n        {CONSTANTS.PAGE_RESET_PASSWORD.BUTTON_NAME}\r\n        </Button>\r\n      </form>\r\n      <div className={styleReset.text}>\r\n        <span className='text text_type_main-default text_color_inactive'>\r\n        {CONSTANTS.PAGE_RESET_PASSWORD.REMEMBERED_PASSWORD}{' '}\r\n          <Link to='/login' className={styleReset.link}>\r\n            {CONSTANTS.PAGE_RESET_PASSWORD.ENTER}\r\n          </Link>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useDispatch } from '../../services/type/hooks';\r\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\r\nimport { logout } from '../../services/actions/auth';\r\nimport styleProfileNavigation from './profile-navigation.module.css';\r\n\r\nexport const ProfileNavigation: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const goLogin = () => {\r\n    history.push('/login');\r\n  };\r\n  const handleClick = () => {\r\n    dispatch(logout(goLogin));\r\n  };\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <div className={styleProfileNavigation.container}>\r\n      <ul className={styleProfileNavigation.list}>\r\n        <li className={styleProfileNavigation.listItem}>\r\n          <NavLink\r\n            className={`text text_type_main-medium ${styleProfileNavigation.link}`}\r\n            activeClassName={styleProfileNavigation.active_link}\r\n            to='/profile'\r\n            exact\r\n          >\r\n            Профиль\r\n          </NavLink>\r\n        </li>\r\n        <li className={styleProfileNavigation.listItem}>\r\n          <NavLink\r\n            className={`text text_type_main-medium ${styleProfileNavigation.link}`}\r\n            activeClassName={styleProfileNavigation.active_link}\r\n            to='/profile/orders'\r\n            exact\r\n          >\r\n            История заказов\r\n          </NavLink>\r\n        </li>\r\n        <li className={styleProfileNavigation.listItem}>\r\n          <NavLink\r\n            onClick={handleClick}\r\n            className={`text text_type_main-medium ${styleProfileNavigation.link}`}\r\n            activeClassName={styleProfileNavigation.active_link}\r\n            to='/login'\r\n            exact\r\n          >\r\n            Выход\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n      {pathname === '/profile' && (\r\n        <span className={`text text_type_main-default text_color_inactive`}>\r\n          В этом разделе вы можете изменить свои персональные данные{' '}\r\n        </span>\r\n      )}\r\n      {pathname === '/profile/orders' && (\r\n        <span className={`text text_type_main-default text_color_inactive`}>\r\n          В этом разделе вы можете просмотреть свою историю заказов{' '}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useRef, useEffect, SyntheticEvent } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styleProfileForm from './profile-user-form.module.css';\r\nimport { useDispatch, useSelector } from '../../services/type/hooks';\r\nimport { userSelectors } from '../../services/selectors';\r\nimport { updateUserProfile } from '../../services/actions/auth';\r\n\r\nexport const ProfileUserForm = () => {\r\n  const { name, email } = useSelector(userSelectors.authData);\r\n  const [inputValue, setInputValue] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    inputName: true,\r\n    inputEmail: true,\r\n    inputPassword: true,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const defaultName = name === inputValue.name ? false : true;\r\n  const defaultEmail = email === inputValue.email ? false : true;\r\n  const defaultPassword = inputValue.password.length === 0 ? false : true;\r\n\r\n  const nameRef = useRef<HTMLInputElement>(null);\r\n  const loginRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleChange = (e: SyntheticEvent) => {\r\n    const target = e.target as HTMLInputElement;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setInputValue({ ...inputValue, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(updateUserProfile(inputValue));\r\n    setInputValue({\r\n      ...inputValue,\r\n      password: '',\r\n      inputName: true,\r\n      inputEmail: true,\r\n      inputPassword: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInputValue((inputValue) => {\r\n      return { ...inputValue, name: name, email: email };\r\n    });\r\n  }, [name, email]);\r\n\r\n  const onIconClickName = () => {\r\n    setTimeout(() => nameRef?.current?.focus(), 0);\r\n    setInputValue({ ...inputValue, inputName: !inputValue.inputName });\r\n  };\r\n  const onIconClickEmail = () => {\r\n    setTimeout(() => loginRef?.current?.focus(), 0);\r\n    setInputValue({ ...inputValue, inputEmail: !inputValue.inputEmail });\r\n  };\r\n  const onIconClickPassword = () => {\r\n    setTimeout(() => passwordRef?.current?.focus(), 0);\r\n    setInputValue({ ...inputValue, inputPassword: !inputValue.inputPassword });\r\n  };\r\n\r\n  const iconName = inputValue.inputName ? 'EditIcon' : 'CloseIcon';\r\n  const iconEmail = inputValue.inputEmail ? 'EditIcon' : 'CloseIcon';\r\n  const iconPassword = inputValue.inputPassword ? 'EditIcon' : 'CloseIcon';\r\n\r\n  const handleClick = () => {\r\n    setInputValue({\r\n      name: name,\r\n      email: email,\r\n      password: '',\r\n      inputName: true,\r\n      inputEmail: true,\r\n      inputPassword: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styleProfileForm.form}>\r\n      <Input\r\n        placeholder='Имя'\r\n        type='text'\r\n        name='name'\r\n        icon={iconName}\r\n        ref={nameRef}\r\n        value={inputValue.name || ''}\r\n        onChange={handleChange}\r\n        size={'default'}\r\n        disabled={inputValue.inputName}\r\n        onIconClick={onIconClickName}\r\n      />\r\n      <Input\r\n        placeholder='Логин'\r\n        type='email'\r\n        name='email'\r\n        icon={iconEmail}\r\n        ref={loginRef}\r\n        value={inputValue.email || ''}\r\n        onChange={handleChange}\r\n        size={'default'}\r\n        disabled={inputValue.inputEmail}\r\n        onIconClick={onIconClickEmail}\r\n      />\r\n      <Input\r\n        placeholder='Пароль'\r\n        type='password'\r\n        name='password'\r\n        icon={iconPassword}\r\n        ref={passwordRef}\r\n        value={inputValue.password || ''}\r\n        onChange={handleChange}\r\n        size={'default'}\r\n        disabled={inputValue.inputPassword}\r\n        onIconClick={onIconClickPassword}\r\n      />\r\n      {(defaultName || defaultEmail || defaultPassword) && (\r\n        <div>\r\n          <Button onClick={handleClick} type='secondary' size='medium'>\r\n            Отмена\r\n          </Button>\r\n          <Button type='primary' size='small'>\r\n            Сохранить\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n","import { RootState } from '../type';\r\n\r\nexport const wsSelectors = {\r\n  wsData: (store: RootState) => store.ws.data,\r\n  wsDataAuth: (store: RootState) => store.wsAuth.data,\r\n  wsConnected: (store: RootState) => store.ws.wsConnected,\r\n  wsConnectedAuth: (store: RootState) => store.wsAuth.wsConnected,\r\n};\r\n","import React, { FC } from 'react';\r\n\r\ntype TOrderTime = {\r\n  time: string | undefined;\r\n};\r\n\r\nconst OrderTime: FC<TOrderTime> = ({ time }) => {\r\n  return (\r\n    <span className='text text_type_main-default text_color_inactive'>\r\n      {time}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default OrderTime;\r\n","import React, { memo, FC } from 'react';\r\nimport styleOrderCardIngredients from './order-card-ingredients.module.css';\r\nimport { useSelector } from '../../services/type/hooks';\r\nimport { ingredientSelectors } from '../../services/selectors';\r\nimport {\r\n  getOrderDate,\r\n  getOrderIngredients,\r\n  getOrderPrice,\r\n  getOrderStatus,\r\n} from '../../utils/function';\r\nimport { ITypeIngredient } from '../../utils/type-constants';\r\nimport OrderTime from '../order-time/order-time';\r\nimport OrderPrice from '../order-price/order-price';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { TOrder } from '../../services/type/socket';\r\n\r\ntype TOrderCardIngredients = {\r\n  name: string;\r\n  number: number;\r\n  ingredients: Array<string>;\r\n  status?: string;\r\n  order: TOrder;\r\n};\r\n\r\nconst OrderCardIngredients: FC<TOrderCardIngredients> = ({\r\n  name,\r\n  number,\r\n  ingredients,\r\n  status,\r\n  order,\r\n}) => {\r\n  const location = useLocation();\r\n  const pathName =\r\n    location.pathname === '/feed'\r\n      ? `/feed/${order?._id}`\r\n      : `/profile/orders/${order._id}`;\r\n  const allIngredients: ITypeIngredient[] = useSelector(\r\n    ingredientSelectors.allIngredients\r\n  );\r\n  const orderIngredients = getOrderIngredients(\r\n    ingredients,\r\n    allIngredients\r\n  ).slice(0, 6);\r\n  const countIngredients = ingredients.length - 6;\r\n\r\n  const orderStatus = status\r\n    ? getOrderStatus(status, styleOrderCardIngredients)\r\n    : null;\r\n\r\n  const price = getOrderPrice(\r\n    getOrderIngredients(order.ingredients, allIngredients)\r\n  );\r\n\r\n  const timeOrder = getOrderDate(order);\r\n\r\n  return (\r\n    <Link\r\n      className={styleOrderCardIngredients.link}\r\n      to={{ pathname: pathName, state: { background: location } }}\r\n    >\r\n      <section className={styleOrderCardIngredients.section}>\r\n        <div className={styleOrderCardIngredients.orderTime}>\r\n          <span className='text text_type_digits-default'>{`#${number}`}</span>\r\n          <OrderTime time={timeOrder} />\r\n        </div>\r\n        <div className='mb-6'>\r\n          <h3 className='text text_type_main-medium'>{name}</h3>\r\n          {status && (\r\n            <p\r\n              className={`text text_type_main-default mt-2 ${orderStatus?.colorStatus}`}\r\n            >\r\n              {orderStatus?.nameStatus}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className={styleOrderCardIngredients.containerOrderImg}>\r\n          <ul className={styleOrderCardIngredients.list}>\r\n            {orderIngredients.map((item: ITypeIngredient, index: number) => {\r\n              const zIndex = 6 - index;\r\n              return (\r\n                <li\r\n                  className={styleOrderCardIngredients.listItem}\r\n                  key={index}\r\n                  style={{ zIndex }}\r\n                >\r\n                  <img\r\n                    src={item.image_large}\r\n                    alt={item.name}\r\n                    className={styleOrderCardIngredients.img}\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n            {ingredients.length > 6 && (\r\n              <div className={styleOrderCardIngredients.overlay}>\r\n                {' '}\r\n                <span className='text text_type_main-default'>{`+${countIngredients}`}</span>\r\n              </div>\r\n            )}\r\n          </ul>\r\n          <div className={styleOrderCardIngredients.containerPrice}>\r\n            <OrderPrice price={price} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default memo(OrderCardIngredients);\r\n","import React, { memo, useEffect } from 'react';\r\nimport {\r\n  WS_CONNECTION_CLOSED_AUTH,\r\n  WS_CONNECTION_START_AUTH,\r\n} from '../../services/actions';\r\nimport { wsSelectors } from '../../services/selectors/wc-selectors';\r\nimport { useDispatch, useSelector } from '../../services/type/hooks';\r\nimport { TOrder } from '../../services/type/socket';\r\nimport OrderCardIngredients from '../order-card-ingredients/order-card-ingredients';\r\nimport styleOrdersHistory from './orders-history.module.css';\r\n\r\nfunction OrdersHistory() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({ type: WS_CONNECTION_START_AUTH });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED_AUTH });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const { orders } = useSelector(wsSelectors.wsDataAuth);\r\n\r\n  return (\r\n    <section className={styleOrdersHistory.section}>\r\n      <ul className={styleOrdersHistory.list}>\r\n        {orders.reverse().map((order: TOrder) => {\r\n          return (\r\n            <li key={order._id}>\r\n              <OrderCardIngredients\r\n                number={order.number}\r\n                name={order.name}\r\n                ingredients={order.ingredients}\r\n                status={order.status}\r\n                order={order}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default memo(OrdersHistory);\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport styleProfile from './profile.module.css';\r\nimport { ProfileNavigation } from '../../components/profile-navigation/profile-navigation';\r\nimport { ProfileUserForm } from '../../components/profile-user-form/profile-user-form';\r\nimport { useDispatch } from '../../services/type/hooks';\r\nimport { getUserProfile } from '../../services/actions/auth';\r\nimport OrdersHistory from '../../components/orders-history/orders-history';\r\n\r\nexport const Profile = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserProfile());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className={styleProfile.section}>\r\n      {' '}\r\n      <ProfileNavigation />\r\n      <Switch>\r\n        <Route path='/profile' exact>\r\n          <ProfileUserForm />\r\n        </Route>\r\n        <Route path='/profile/orders' exact>\r\n          <OrdersHistory />\r\n        </Route>\r\n      </Switch>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect, FC } from 'react';\r\nimport { useDispatch } from '../../services/type/hooks';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { RouteProps } from 'react-router-dom';\r\nimport { getNewAccessToken } from '../../services/actions/auth';\r\n\r\nconst ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const dispatch = useDispatch();\r\n  const refreshToken = Boolean(localStorage.refreshToken);\r\n\r\n  useEffect(() => {\r\n    if (refreshToken) {\r\n      dispatch(getNewAccessToken());\r\n    }\r\n  }, [dispatch, refreshToken]);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        refreshToken ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CONSTANTS } from '../../utils/constants';\r\nimport style404 from './page-404.module.css';\r\n\r\nexport const Page404 = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className={style404.section}>\r\n      <h2 className='text text_type_digits-large'>\r\n        {CONSTANTS.PAGE_404.TITLE}\r\n      </h2>\r\n      <p className='text text_type_main-large'>{CONSTANTS.PAGE_404.SUBTITLE}</p>\r\n      <Button\r\n        onClick={() => history.replace('/')}\r\n        type='secondary'\r\n        size='large'\r\n      >\r\n        {CONSTANTS.PAGE_404.BUTTON_NAME}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, memo } from 'react';\r\nimport styleOrderIngredients from './order-ingredients.module.css';\r\nimport { CONSTANTS } from '../../utils/constants';\r\nimport OrderCardIngredients from '../order-card-ingredients/order-card-ingredients';\r\nimport { TOrder } from '../../services/type/socket';\r\n\r\ntype TOrders = {\r\n  orders: TOrder[];\r\n};\r\n\r\nconst OrderIngredients: FC<TOrders> = ({ orders }) => {\r\n  return (\r\n    orders && (\r\n      <section className={styleOrderIngredients.section}>\r\n        <h2 className='text text_type_main-large'>\r\n          {CONSTANTS.ORDER_INGREDIENTS.TITLE}\r\n        </h2>\r\n        <ul className={styleOrderIngredients.list}>\r\n          {orders.map((order: TOrder) => {\r\n            return (\r\n              <li key={order._id}>\r\n                <OrderCardIngredients\r\n                  number={order.number}\r\n                  name={order.name}\r\n                  ingredients={order.ingredients}\r\n                  order={order}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    )\r\n  );\r\n};\r\n\r\nexport default memo(OrderIngredients);\r\n","import React, { FC, memo } from 'react';\r\nimport style from './orders-board.module.css';\r\nimport { CONSTANTS } from '../../utils/constants';\r\nimport { TWSData } from '../../services/type/socket';\r\nimport { getOrderNumbers } from '../../utils/function';\r\n\r\ntype TOrders = {\r\n  data: TWSData;\r\n};\r\n\r\nconst OrdersBoard: FC<TOrders> = ({ data }) => {\r\n  const { orders } = data;\r\n  const { done, pending } = getOrderNumbers(orders);\r\n\r\n  return (\r\n    <section className={style.section}>\r\n      <div className={style.boardContainer}>\r\n        <div className='mr-9'>\r\n          <h3 className='text text_type_main-medium mb-6'>\r\n            {CONSTANTS.ORDER_BOARD.READY}\r\n          </h3>\r\n          <ul className={style.list}>\r\n            {done.map((item: number, index: number) => {\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={`text text_type_digits-default ${style.listItem}`}\r\n                >\r\n                  {item}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <h3 className='text text_type_main-medium mb-6'>\r\n            {CONSTANTS.ORDER_BOARD.PREPARING}\r\n          </h3>\r\n          <ul className={style.list}>\r\n            {pending.map((item: number, index: number) => {\r\n              return (\r\n                <li key={index} className={`text text_type_digits-default`}>\r\n                  {item}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className='mt-15 mb-15'>\r\n        <h3 className='text text_type_main-medium'>\r\n          {CONSTANTS.ORDER_BOARD.ALL_TIME}\r\n        </h3>\r\n        <span className={`text text_type_digits-large ${style.numberOrder}`}>\r\n          {data.total}\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <h3 className='text text_type_main-medium'>\r\n          {CONSTANTS.ORDER_BOARD.TODAY}\r\n        </h3>\r\n        <span className={`text text_type_digits-large ${style.numberOrder}`}>\r\n          {data.totalToday}\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default memo(OrdersBoard);\r\n","import React, { memo, useEffect } from 'react';\r\nimport OrderIngredients from '../../components/order-ingredients/order-ingredients';\r\nimport OrdersBoard from '../../components/orders-board/orders-board';\r\nimport styleFeed from './feed-page.module.css';\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_START,\r\n} from '../../services/actions';\r\nimport { wsSelectors } from '../../services/selectors/wc-selectors';\r\nimport { useDispatch, useSelector } from '../../services/type/hooks';\r\n\r\nfunction FeedPage() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({ type: WS_CONNECTION_START });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const wsData = useSelector(wsSelectors.wsData);\r\n\r\n  return (\r\n    <main className={styleFeed.main}>\r\n      <OrderIngredients orders={wsData.orders} />\r\n      <OrdersBoard data={wsData} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default memo(FeedPage);\r\n","import { FC, memo } from 'react';\r\nimport { ITypeIngredient } from '../../utils/type-constants';\r\nimport OrderPrice from '../order-price/order-price';\r\nimport styleOrderIngredient from './order-ingredient.module.css';\r\n\r\ntype TOrderIngredient = {\r\n  ingredient: ITypeIngredient;\r\n  quantity: number;\r\n};\r\n\r\nconst OrderIngredient: FC<TOrderIngredient> = ({ ingredient, quantity }) => {\r\n  const ingredientPrice =\r\n    ingredient.type === 'bun'\r\n      ? `2 x ${ingredient.price}`\r\n      : `${quantity} x ${ingredient.price}`;\r\n\r\n  return (\r\n    <section className={styleOrderIngredient.section}>\r\n      <div className={styleOrderIngredient.containerDiv}>\r\n        <img\r\n          className={`mr-4 ${styleOrderIngredient.img}`}\r\n          src={ingredient.image}\r\n          alt={ingredient.name}\r\n        />\r\n        <span\r\n          className={`text text_type_main-default mr-4 ${styleOrderIngredient.ingredientName}`}\r\n        >\r\n          {ingredient.name}\r\n        </span>\r\n      </div>\r\n      <div className={styleOrderIngredient.containerDiv}>\r\n        <OrderPrice price={ingredientPrice} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default memo(OrderIngredient);\r\n","import { memo, useEffect } from 'react';\r\nimport { useParams, useRouteMatch } from 'react-router-dom';\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_CLOSED_AUTH,\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_START_AUTH,\r\n} from '../../services/actions';\r\nimport { ingredientSelectors } from '../../services/selectors';\r\nimport { wsSelectors } from '../../services/selectors/wc-selectors';\r\nimport { useDispatch, useSelector } from '../../services/type/hooks';\r\nimport { CONSTANTS } from '../../utils/constants';\r\nimport {\r\n  getOrderDate,\r\n  getOrderIngredients,\r\n  getOrderPrice,\r\n  getOrderStatus,\r\n  getQuantityIngredients,\r\n} from '../../utils/function';\r\nimport { ITypeIngredient } from '../../utils/type-constants';\r\nimport OrderIngredient from '../order-ingredient/order-ingredient';\r\nimport OrderPrice from '../order-price/order-price';\r\nimport OrderTime from '../order-time/order-time';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport styleOrder from './order.module.css';\r\n\r\nexport type TOrder = {\r\n  ingredients: Array<string>;\r\n  _id: string;\r\n  name: string;\r\n  status: string;\r\n  number: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n};\r\nconst Order = () => {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams<{ id: string }>();\r\n  const isProfile = !!useRouteMatch(CONSTANTS.PROFILE_ROUTE);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      isProfile\r\n        ? { type: WS_CONNECTION_START_AUTH }\r\n        : { type: WS_CONNECTION_START }\r\n    );\r\n    return () => {\r\n      dispatch(\r\n        isProfile\r\n          ? { type: WS_CONNECTION_CLOSED_AUTH }\r\n          : { type: WS_CONNECTION_CLOSED }\r\n      );\r\n    };\r\n  }, [dispatch, isProfile]);\r\n  const { orders } = useSelector(\r\n    isProfile ? wsSelectors.wsDataAuth : wsSelectors.wsData\r\n  );\r\n\r\n  const wsConnected = useSelector(\r\n    isProfile ? wsSelectors.wsConnectedAuth : wsSelectors.wsConnected\r\n  );\r\n\r\n  const order = orders.find((i: TOrder) => i._id === id) as TOrder;\r\n  const timeOrder = getOrderDate(order);\r\n\r\n  const allIngredients: ITypeIngredient[] = useSelector(\r\n    ingredientSelectors.allIngredients\r\n  );\r\n\r\n  if (order && wsConnected) {\r\n    const numberOfIngredients = getQuantityIngredients(order.ingredients);\r\n\r\n    const orderIngredients = getOrderIngredients(\r\n      Object.keys(numberOfIngredients),\r\n      allIngredients\r\n    );\r\n\r\n    const quantity: Array<number> = Object.values(numberOfIngredients);\r\n\r\n    const price = getOrderPrice(\r\n      getOrderIngredients(order.ingredients, allIngredients)\r\n    );\r\n    const status = getOrderStatus(order.status, styleOrder);\r\n    const render = () => {\r\n      return (\r\n        <section className={styleOrder.section}>\r\n          <span\r\n            className={`text text_type_digits-default mb-10 ${styleOrder.orderNumber}`}\r\n          >\r\n            #{order.number}\r\n          </span>\r\n          <h3 className='text text_type_main-medium mb-3'>{order.name}</h3>\r\n          <span\r\n            className={`text text_type_main-default mb-8 ${status.colorStatus}`}\r\n          >\r\n            {status.nameStatus}\r\n          </span>\r\n          <p className='text text_type_main-medium mb-4'>\r\n            {CONSTANTS.ORDER.STRUCTURE}\r\n          </p>\r\n          <ul className={styleOrder.list}>\r\n            {orderIngredients.map(\r\n              (ingredient: ITypeIngredient, index: number) => {\r\n                return (\r\n                  <li key={index}>\r\n                    <OrderIngredient\r\n                      ingredient={ingredient}\r\n                      quantity={quantity[index]}\r\n                    />\r\n                  </li>\r\n                );\r\n              }\r\n            )}\r\n          </ul>\r\n          <div className={styleOrder.totalPrice}>\r\n            <OrderTime time={timeOrder} />\r\n            <OrderPrice price={price} />\r\n          </div>\r\n        </section>\r\n      );\r\n    };\r\n    return render();\r\n  } else {\r\n    return <Preloader />;\r\n  }\r\n};\r\n\r\nexport default memo(Order);\r\n","import React, { memo, useEffect } from 'react';\r\nimport { Route, Switch, useLocation, useHistory } from 'react-router-dom';\r\nimport AppHeader from '../app-header/app-header';\r\nimport MainPage from '../../pages/main-page/main-page';\r\nimport styleApp from './app.module.css';\r\nimport Modal from '../modal/modal';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport { CONSTANTS } from '../../utils/constants';\r\nimport { useDispatch } from '../../services/type/hooks';\r\nimport { getItems } from '../../services/actions/ingredients';\r\nimport { CLEAR_ORDER_NUMBER } from '../../services/actions';\r\nimport { Login } from '../../pages/login/login';\r\nimport { Register } from '../../pages/register/register';\r\nimport { ForgotPassword } from '../../pages/forgot-password/forgot-password';\r\nimport { ResetPassword } from '../../pages/reset-password/reset-password';\r\nimport { Profile } from '../../pages/profile/profile';\r\nimport ProtectedRoute from '../protected-route/protected-route';\r\nimport { Page404 } from '../../pages/404/page-404';\r\nimport FeedPage from '../../pages/feed-page/feed-page';\r\nimport Order from '../order/order';\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const closeOrderPopup = React.useCallback(() => {\r\n    dispatch({ type: CLEAR_ORDER_NUMBER });\r\n    history.goBack();\r\n  }, [dispatch, history]);\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getItems());\r\n  }, [dispatch]);\r\n\r\n  const background = location.state?.background;\r\n\r\n  return (\r\n    <div className={styleApp.app}>\r\n      <AppHeader />\r\n      <Switch location={background || location}>\r\n        <Route path='/login' exact={true}>\r\n          <Login />\r\n        </Route>\r\n        <Route path='/register' exact={true}>\r\n          <Register />\r\n        </Route>\r\n        <Route path='/forgot-password' exact={true}>\r\n          <ForgotPassword />\r\n        </Route>\r\n        <Route path='/reset-password' exact={true}>\r\n          <ResetPassword />\r\n        </Route>\r\n      \r\n        <Route path='/feed' exact={true}>\r\n          <FeedPage />\r\n        </Route>\r\n        <Route path='/feed/:id' exact={true}>\r\n          <Order />\r\n        </Route>\r\n        <ProtectedRoute path='/profile/orders/:id' exact={true}>\r\n          <Order />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path='/profile' exact={false}>\r\n          <Profile />\r\n        </ProtectedRoute>\r\n        <Route path='/ingredients/:id' exact={true}>\r\n          <IngredientDetails title={CONSTANTS.TITLE_PAGE} />\r\n        </Route>\r\n          <Route path='/' >\r\n          <MainPage />\r\n        </Route>\r\n        <Route>\r\n          <Page404 />\r\n        </Route>\r\n      </Switch>\r\n      {background && (\r\n        <>\r\n          <Route path='/ingredients/:id' exact={true}>\r\n            <Modal close={goBack} title={CONSTANTS.TITLE}>\r\n              <IngredientDetails />\r\n            </Modal>\r\n          </Route>\r\n          <ProtectedRoute path='/profile/orders/:id' exact={true}>\r\n            <Modal close={goBack}>\r\n              <Order />\r\n            </Modal>\r\n          </ProtectedRoute>\r\n          <Route path='/feed/:id' exact={true}>\r\n            <Modal close={goBack}>\r\n              <Order />\r\n            </Modal>\r\n          </Route>\r\n          <Route path='/order-modal' exact={true}>\r\n            <Modal close={closeOrderPopup} title={CONSTANTS.EMPTY_TITLE}>\r\n              <OrderDetails />\r\n            </Modal>\r\n          </Route>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n  WS_SEND_MESSAGE,\r\n} from '.';\r\nimport { TWSData } from '../type/socket';\r\n\r\nexport const wsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  wsSendMessage: WS_SEND_MESSAGE,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_MESSAGE,\r\n};\r\n\r\nexport interface IWSStart {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n}\r\n\r\nexport interface IWSSuccess {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n  readonly payload: PayloadAction;\r\n}\r\n\r\nexport interface IWSError {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n  readonly payload: PayloadAction;\r\n}\r\n\r\nexport interface IWSClosed {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n  readonly payload: PayloadAction;\r\n}\r\n\r\nexport interface IWSGetMessage {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  readonly payload: TWSData;\r\n}\r\n\r\nexport interface IWSSendMessage {\r\n  readonly type: typeof WS_SEND_MESSAGE;\r\n}\r\n\r\nexport type TWSActions =\r\n  | IWSStart\r\n  | IWSSuccess\r\n  | IWSError\r\n  | IWSClosed\r\n  | IWSGetMessage\r\n  | IWSSendMessage;\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport {\r\n  WS_CONNECTION_START_AUTH,\r\n  WS_CONNECTION_SUCCESS_AUTH,\r\n  WS_CONNECTION_ERROR_AUTH,\r\n  WS_CONNECTION_CLOSED_AUTH,\r\n  WS_GET_MESSAGE_AUTH,\r\n  WS_SEND_MESSAGE_AUTH,\r\n} from '.';\r\nimport { TWSData } from '../type/socket';\r\n\r\nexport const wsActionsAuth = {\r\n  wsInit: WS_CONNECTION_START_AUTH,\r\n  wsSendMessage: WS_SEND_MESSAGE_AUTH,\r\n  onOpen: WS_CONNECTION_SUCCESS_AUTH,\r\n  onClose: WS_CONNECTION_CLOSED_AUTH,\r\n  onError: WS_CONNECTION_ERROR_AUTH,\r\n  onMessage: WS_GET_MESSAGE_AUTH,\r\n};\r\n\r\nexport interface IWSStartAuth {\r\n  readonly type: typeof WS_CONNECTION_START_AUTH;\r\n}\r\n\r\nexport interface IWSSuccessAuth {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS_AUTH;\r\n  readonly payload: PayloadAction;\r\n}\r\n\r\nexport interface IWSErrorAuth {\r\n  readonly type: typeof WS_CONNECTION_ERROR_AUTH;\r\n  readonly payload: PayloadAction;\r\n}\r\n\r\nexport interface IWSClosedAuth {\r\n  readonly type: typeof WS_CONNECTION_CLOSED_AUTH;\r\n  readonly payload: PayloadAction;\r\n}\r\n\r\nexport interface IWSGetMessageAuth {\r\n  readonly type: typeof WS_GET_MESSAGE_AUTH;\r\n  readonly payload: TWSData;\r\n}\r\n\r\nexport interface IWSSendMessageAuth {\r\n  readonly type: typeof WS_SEND_MESSAGE_AUTH;\r\n}\r\n\r\nexport type TWSActionsAuth =\r\n  | IWSStartAuth\r\n  | IWSSuccessAuth\r\n  | IWSErrorAuth\r\n  | IWSClosedAuth\r\n  | IWSGetMessageAuth\r\n  | IWSSendMessageAuth;\r\n","import { AnyAction, MiddlewareAPI } from 'redux';\r\nimport { getCookie } from '../../utils/function';\r\nimport { TWsActions } from '../type/socket';\r\n\r\nexport const socketMiddleware =\r\n  (wsUrl: string, wsActions: TWsActions, auth: boolean) =>\r\n  (store: MiddlewareAPI) => {\r\n    let socket: WebSocket | null = null;\r\n    return (next: (item: AnyAction) => void) => (action: AnyAction) => {\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n      const { wsInit, wsSendMessage, onOpen, onClose, onError, onMessage } =\r\n        wsActions;\r\n      const token = auth ? getCookie('token') : null;\r\n      if (type === wsInit) {\r\n        socket = token\r\n          ? new WebSocket(`${wsUrl}?token=${token}`)\r\n          : new WebSocket(`${wsUrl}`);\r\n      }\r\n\r\n      if (socket) {\r\n        socket.onopen = (event) => {\r\n          dispatch({ type: onOpen, payload: event });\r\n        };\r\n\r\n        socket.onerror = (event) => {\r\n          dispatch({ type: onError, payload: event });\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n          dispatch({ type: onMessage, payload: restParsedData });\r\n        };\r\n\r\n        socket.onclose = (event) => {\r\n          dispatch({ type: onClose, payload: event });\r\n        };\r\n\r\n        if (type === onClose) {\r\n          socket.close();\r\n        }\r\n\r\n        if (type === wsSendMessage) {\r\n          const message = token ? { ...payload, token: token } : { ...payload };\r\n          socket.send(JSON.stringify(message));\r\n        }\r\n      }\r\n      next(action);\r\n    };\r\n  };\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { TWSData } from '../type/socket';\r\nimport {\r\n  WS_CONNECTION_SUCCESS_AUTH,\r\n  WS_CONNECTION_ERROR_AUTH,\r\n  WS_CONNECTION_CLOSED_AUTH,\r\n  WS_GET_MESSAGE_AUTH,\r\n} from '../actions';\r\nimport { TWSActionsAuth } from '../actions/wsActionsAuth';\r\n\r\ntype TInitialSocketState = {\r\n  wsConnected: boolean;\r\n  data: TWSData;\r\n  error?: PayloadAction;\r\n};\r\n\r\nconst initialSocketState: TInitialSocketState = {\r\n  wsConnected: false,\r\n  data: { success: false, orders: [], total: 0, totalToday: 0 },\r\n};\r\n\r\nexport const wsReducerAuth = (\r\n  state = initialSocketState,\r\n  action: TWSActionsAuth\r\n): TInitialSocketState => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_SUCCESS_AUTH:\r\n      return {\r\n        ...state,\r\n        wsConnected: true,\r\n        error: undefined,\r\n      };\r\n    case WS_CONNECTION_ERROR_AUTH:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        wsConnected: false,\r\n      };\r\n    case WS_CONNECTION_CLOSED_AUTH:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        wsConnected: false,\r\n      };\r\n    case WS_GET_MESSAGE_AUTH:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        data: {\r\n          ...state.data,\r\n          orders: action.payload.orders,\r\n          total: action.payload.total,\r\n          totalToday: action.payload.totalToday,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TIngredientsCounter } from './../type/data';\r\nimport { TIngredientsActions } from './../actions/ingredients';\r\nimport {\r\n  GET_ITEMS_REQUEST,\r\n  GET_ITEMS_SUCCESS,\r\n  GET_ITEMS_ERROR,\r\n  GET_VIEWED_INGREDIENT,\r\n  ADD_INGREDIENT_CONSTRUCTOR,\r\n  DEL_INGREDIENT_CONSTRUCTOR,\r\n  INCREASE_INGREDIENTS,\r\n  REDUCE_INGREDIENTS,\r\n  DRAG_CONSTRUCTOR_INGREDIENT,\r\n  CLEAR_CONSTRUCTOR_INGREDIENTS,\r\n} from '../actions';\r\nimport {\r\n  ITypeIngredient,\r\n  TIngredientWithUniqueId,\r\n} from '../../utils/type-constants';\r\n\r\ntype TInitialIngredientState = {\r\n  allIngredients: ITypeIngredient[];\r\n  itemsRequest: boolean;\r\n  itemsFailed: boolean;\r\n  viewedIngredient: ITypeIngredient | null;\r\n  ingredientsConstructor: {\r\n    bun: TIngredientWithUniqueId | null;\r\n    ingredient: TIngredientWithUniqueId[];\r\n    counter: TIngredientsCounter;\r\n  };\r\n};\r\n\r\nconst initialIngredientState: TInitialIngredientState = {\r\n  allIngredients: [],\r\n  itemsRequest: false,\r\n  itemsFailed: false,\r\n  viewedIngredient: null,\r\n  ingredientsConstructor: {\r\n    bun: null,\r\n    ingredient: [],\r\n    counter: {},\r\n  },\r\n};\r\n\r\nexport const ingredientReducer = (\r\n  state = initialIngredientState,\r\n  action: TIngredientsActions\r\n): TInitialIngredientState => {\r\n  switch (action.type) {\r\n    case GET_ITEMS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        itemsRequest: true,\r\n      };\r\n    }\r\n    case GET_ITEMS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        itemsFailed: false,\r\n        allIngredients: action.items,\r\n        itemsRequest: false,\r\n      };\r\n    }\r\n    case GET_ITEMS_ERROR: {\r\n      return { ...state, itemsFailed: true, itemsRequest: false };\r\n    }\r\n\r\n    case GET_VIEWED_INGREDIENT: {\r\n      return { ...state, viewedIngredient: action.item };\r\n    }\r\n\r\n    case ADD_INGREDIENT_CONSTRUCTOR: {\r\n      if (action.item.type !== 'bun') {\r\n        return {\r\n          ...state,\r\n          ingredientsConstructor: {\r\n            ...state.ingredientsConstructor,\r\n            ingredient: [\r\n              ...state.ingredientsConstructor.ingredient,\r\n              action.item,\r\n            ],\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        ingredientsConstructor: {\r\n          ...state.ingredientsConstructor,\r\n          bun: action.item,\r\n        },\r\n      };\r\n    }\r\n\r\n    case DEL_INGREDIENT_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        ingredientsConstructor: {\r\n          ...state.ingredientsConstructor,\r\n          ingredient: [...state.ingredientsConstructor.ingredient].filter(\r\n            (i) => {\r\n              return i.uniqueId !== action.id;\r\n            }\r\n          ),\r\n        },\r\n      };\r\n    }\r\n\r\n    case CLEAR_CONSTRUCTOR_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        ingredientsConstructor: {\r\n          bun: null,\r\n          ingredient: [],\r\n          counter: {},\r\n        },\r\n      };\r\n    }\r\n\r\n    case INCREASE_INGREDIENTS: {\r\n      if (action.typeForCounter !== 'bun') {\r\n        return {\r\n          ...state,\r\n          ingredientsConstructor: {\r\n            ...state.ingredientsConstructor,\r\n            counter: {\r\n              ...state.ingredientsConstructor.counter,\r\n              [action.id]: [...state.ingredientsConstructor.ingredient].filter(\r\n                (i) => {\r\n                  return i._id === action.id;\r\n                }\r\n              ).length,\r\n            },\r\n          },\r\n        };\r\n      } else return state;\r\n    }\r\n\r\n    case REDUCE_INGREDIENTS: {\r\n      if (action.typeForCounter !== 'bun') {\r\n        return {\r\n          ...state,\r\n          ingredientsConstructor: {\r\n            ...state.ingredientsConstructor,\r\n            counter: {\r\n              ...state.ingredientsConstructor.counter,\r\n              [action.id]: state.ingredientsConstructor.counter[action.id] - 1,\r\n            },\r\n          },\r\n        };\r\n      } else return state;\r\n    }\r\n\r\n    case DRAG_CONSTRUCTOR_INGREDIENT: {\r\n      const newListIngredients = [...state.ingredientsConstructor.ingredient];\r\n      const dragIngredient = newListIngredients.splice(action.dragIndex, 1)[0];\r\n      newListIngredients.splice(action.hoverIndex, 0, dragIngredient);\r\n      return {\r\n        ...state,\r\n        ingredientsConstructor: {\r\n          ...state.ingredientsConstructor,\r\n          ingredient: newListIngredients,\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_ORDER_ERROR,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  CLEAR_ORDER_NUMBER,\r\n} from '../actions';\r\nimport { TOrderActions } from '../actions/order';\r\n\r\ntype TInitialOrderState = {\r\n  orderName: string | null;\r\n  orderNumber: number | null;\r\n  orderRequest: boolean;\r\n  orderFailed: boolean;\r\n};\r\n\r\nconst initialOrderState: TInitialOrderState = {\r\n  orderName: null,\r\n  orderNumber: null,\r\n  orderRequest: false,\r\n  orderFailed: false,\r\n};\r\n\r\nexport const orderReducer = (\r\n  state = initialOrderState,\r\n  action: TOrderActions\r\n): TInitialOrderState => {\r\n  switch (action.type) {\r\n    case GET_ORDER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        orderRequest: true,\r\n      }; \r\n    }\r\n    case GET_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orderFailed: false,\r\n        orderName: action.orderData.name,\r\n        orderNumber: action.orderData.order.number,\r\n        orderRequest: false,\r\n      };\r\n    }\r\n    case GET_ORDER_ERROR: {\r\n      return { ...state, orderFailed: true, orderRequest: false };\r\n    }\r\n\r\n    case CLEAR_ORDER_NUMBER: {\r\n      return {\r\n        orderName: null,\r\n        orderNumber: null,\r\n        orderRequest: false,\r\n        orderFailed: false,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TAuthActions } from './../actions/auth';\r\nimport {\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_ERROR,\r\n  RESET_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_ERROR,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_ERROR,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_ERROR,\r\n  TOKEN_REQUEST,\r\n  TOKEN_SUCCESS,\r\n  TOKEN_ERROR,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_ERROR,\r\n  USER_REQUEST,\r\n  USER_SUCCESS,\r\n  USER_ERROR,\r\n} from '../actions';\r\n\r\ntype TInitState = {\r\n  name: string;\r\n  email: string;\r\n\r\n  userRequest: boolean;\r\n  userFailed: boolean;\r\n\r\n  updateUserRequest: boolean;\r\n  updateUserFailed: boolean;\r\n\r\n  tokenRequest: boolean;\r\n  tokenUpdate: boolean;\r\n  tokenFailed: boolean;\r\n\r\n  logoutRequest: boolean;\r\n  logoutFailed: boolean;\r\n\r\n  registerRequest: boolean;\r\n  registerFailed: boolean;\r\n\r\n  loginRequest: boolean;\r\n  loginFailed: boolean;\r\n\r\n  forgotRequest: boolean;\r\n  forgotFailed: boolean;\r\n  isResetPassword: boolean;\r\n  resetRequest: boolean;\r\n  resetFailed: boolean;\r\n};\r\n\r\nconst initState: TInitState = {\r\n  name: '',\r\n  email: '',\r\n\r\n  userRequest: false,\r\n  userFailed: false,\r\n\r\n  updateUserRequest: false,\r\n  updateUserFailed: false,\r\n\r\n  tokenRequest: false,\r\n  tokenUpdate: false,\r\n  tokenFailed: false,\r\n\r\n  logoutRequest: false,\r\n  logoutFailed: false,\r\n\r\n  registerRequest: false,\r\n  registerFailed: false,\r\n\r\n  loginRequest: false,\r\n  loginFailed: false,\r\n\r\n  forgotRequest: false,\r\n  forgotFailed: false,\r\n  isResetPassword: false,\r\n  resetRequest: false,\r\n  resetFailed: false,\r\n};\r\n\r\nexport const authReducer = (\r\n  state = initState,\r\n  action: TAuthActions\r\n): TInitState => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST: {\r\n      return { ...state, updateUserRequest: true };\r\n    }\r\n    case USER_UPDATE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        updateUserRequest: false,\r\n        updateUserFailed: false,\r\n        name: action.data.user.name,\r\n        email: action.data.user.email,\r\n      };\r\n    }\r\n    case USER_UPDATE_ERROR: {\r\n      return {\r\n        ...state,\r\n        updateUserRequest: false,\r\n        updateUserFailed: true,\r\n      };\r\n    }\r\n\r\n    case USER_REQUEST: {\r\n      return { ...state, userRequest: true };\r\n    }\r\n    case USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        userRequest: false,\r\n        userFailed: false,\r\n        name: action.data.user.name,\r\n        email: action.data.user.email,\r\n      };\r\n    }\r\n    case USER_ERROR: {\r\n      return {\r\n        ...state,\r\n        userRequest: false,\r\n        userFailed: true,\r\n      };\r\n    }\r\n\r\n    case TOKEN_REQUEST: {\r\n      return { ...state, tokenRequest: true };\r\n    }\r\n    case TOKEN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        tokenUpdate: true,\r\n        tokenRequest: false,\r\n        tokenFailed: false,\r\n      };\r\n    }\r\n    case TOKEN_ERROR: {\r\n      return {\r\n        ...state,\r\n        tokenRequest: false,\r\n        tokenUpdate: false,\r\n        tokenFailed: true,\r\n      };\r\n    }\r\n\r\n    case LOGOUT_REQUEST: {\r\n      return { ...state, registerRequest: true };\r\n    }\r\n    case LOGOUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        logoutRequest: false,\r\n        logoutFailed: false,\r\n        name: '',\r\n        email: '',\r\n      };\r\n    }\r\n    case LOGOUT_ERROR: {\r\n      return {\r\n        ...state,\r\n        logoutRequest: false,\r\n        logoutFailed: true,\r\n      };\r\n    }\r\n\r\n    case REGISTER_REQUEST: {\r\n      return { ...state, registerRequest: true };\r\n    }\r\n    case REGISTER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        registerRequest: false,\r\n        registerFailed: false,\r\n        name: action.data.user.name,\r\n        email: action.data.user.email,\r\n      };\r\n    }\r\n    case REGISTER_ERROR: {\r\n      return {\r\n        ...state,\r\n        registerRequest: false,\r\n        registerFailed: true,\r\n      };\r\n    }\r\n\r\n    case LOGIN_REQUEST: {\r\n      return { ...state, loginRequest: true };\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        loginFailed: false,\r\n        name: action.data.user.name,\r\n        email: action.data.user.email,\r\n      };\r\n    }\r\n    case LOGIN_ERROR: {\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        loginFailed: true,\r\n      };\r\n    }\r\n\r\n    case FORGOT_PASSWORD_REQUEST: {\r\n      return { ...state, forgotRequest: true, isResetPassword: false };\r\n    }\r\n    case FORGOT_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        forgotRequest: false,\r\n        isResetPassword: true,\r\n        forgotFailed: false,\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_ERROR: {\r\n      return {\r\n        ...state,\r\n        forgotRequest: false,\r\n        isResetPassword: false,\r\n        forgotFailed: true,\r\n      };\r\n    }\r\n\r\n    case RESET_PASSWORD_REQUEST: {\r\n      return { ...state, resetRequest: true };\r\n    }\r\n    case RESET_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        resetRequest: false,\r\n        resetFailed: false,\r\n      };\r\n    }\r\n    case RESET_PASSWORD_ERROR: {\r\n      return {\r\n        ...state,\r\n        resetRequest: false,\r\n        resetFailed: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { TWSData } from './../type/socket';\r\nimport {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n} from '../actions';\r\nimport { TWSActions } from '../actions/wsActions';\r\n\r\ntype TInitialSocketState = {\r\n  wsConnected: boolean;\r\n  data: TWSData;\r\n  error?: PayloadAction | null;\r\n};\r\n\r\nconst initialSocketState: TInitialSocketState = {\r\n  wsConnected: false,\r\n  data: { success: false, orders: [], total: 0, totalToday: 0 },\r\n};\r\n\r\nexport const wsReducer = (\r\n  state = initialSocketState,\r\n  action: TWSActions\r\n): TInitialSocketState => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsConnected: true,\r\n        error: undefined,\r\n      };\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        wsConnected: false,\r\n      };\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        wsConnected: false,\r\n      };\r\n    case WS_GET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        data: {\r\n          ...state.data,\r\n          orders: action.payload.orders,\r\n          total: action.payload.total,\r\n          totalToday: action.payload.totalToday,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { wsReducerAuth } from './socketAuth';\r\nimport { combineReducers } from 'redux';\r\nimport { ingredientReducer } from './ingredients';\r\nimport { orderReducer } from './order';\r\nimport { authReducer } from './auth';\r\nimport { wsReducer } from './socket';\r\n\r\nexport const rootReducer = combineReducers({\r\n  ingredients: ingredientReducer,\r\n  order: orderReducer,\r\n  auth: authReducer,\r\n  ws: wsReducer,\r\n  wsAuth: wsReducerAuth,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { wsActions } from './services/actions/wsActions';\r\nimport { wsActionsAuth } from './services/actions/wsActionsAuth';\r\nimport { socketMiddleware } from './services/middleware';\r\nimport { rootReducer } from './services/reducers';\r\nimport { WS_URL_ALL, WS_URL_OWNER } from './utils/constants';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(\r\n    thunk,\r\n    socketMiddleware(WS_URL_OWNER, wsActionsAuth, true),\r\n    socketMiddleware(WS_URL_ALL, wsActions, false)\r\n  )\r\n);\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order-card-ingredients_section__3cRwy\",\"orderTime\":\"order-card-ingredients_orderTime__2u7N5\",\"doneColor\":\"order-card-ingredients_doneColor__eVokQ\",\"pendingColor\":\"order-card-ingredients_pendingColor__3UT_k\",\"cancelledColor\":\"order-card-ingredients_cancelledColor__1wUoJ\",\"containerOrderImg\":\"order-card-ingredients_containerOrderImg__2uYWb\",\"list\":\"order-card-ingredients_list__4ue8e\",\"listItem\":\"order-card-ingredients_listItem__29-v9\",\"img\":\"order-card-ingredients_img__2x2QC\",\"overlay\":\"order-card-ingredients_overlay__2qr_6\",\"containerPrice\":\"order-card-ingredients_containerPrice__3JPU4\",\"link\":\"order-card-ingredients_link__Fo9pl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"orders-board_section__EHevI\",\"boardContainer\":\"orders-board_boardContainer__1SXIi\",\"list\":\"orders-board_list__35l7t\",\"listItem\":\"orders-board_listItem__3QU-x\",\"numberOrder\":\"orders-board_numberOrder__VY8Dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__Xr5Fl\",\"form\":\"login_form__2bFXM\",\"text\":\"login_text__QnEaG\",\"link\":\"login_link__2sBI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order-ingredient_section__1bJ5p\",\"containerDiv\":\"order-ingredient_containerDiv__xgnGw\",\"img\":\"order-ingredient_img__SYezj\",\"price\":\"order-ingredient_price__1pWIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order_section__BZElh\",\"orderNumber\":\"order_orderNumber__k6v11\",\"doneColor\":\"order_doneColor__2P35W\",\"pendingColor\":\"order_pendingColor__37OCs\",\"cancelledColor\":\"order_cancelledColor__2Zv3T\",\"list\":\"order_list__3S6ud\",\"totalPrice\":\"order_totalPrice__2UYnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-ingredients_section__2gYOo\",\"title\":\"burger-ingredients_title__z_Bla\",\"tab\":\"burger-ingredients_tab__3bJUR\",\"scroll\":\"burger-ingredients_scroll__3oFxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-constructor_section__3238r\",\"constructorElement\":\"burger-constructor_constructorElement__HP2y_\",\"list\":\"burger-constructor_list__2406p\",\"containerButton\":\"burger-constructor_containerButton__3I1Do\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order-details_section__1AFG9\",\"numberOrder\":\"order-details_numberOrder__2S5_4\",\"spanColor\":\"order-details_spanColor__zTDgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ingredient-details_section__1XxH8\",\"img\":\"ingredient-details_img__3btVw\",\"ul\":\"ingredient-details_ul__26gk0\",\"title\":\"ingredient-details_title__QjM0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"register_container__23CrM\",\"form\":\"register_form__1DfOF\",\"text\":\"register_text__2whi4\",\"link\":\"register_link__2phSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forgot-password_container__1s27P\",\"form\":\"forgot-password_form__29Q6n\",\"text\":\"forgot-password_text__3RzBc\",\"link\":\"forgot-password_link__L0bYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"reset-password_container__pBJ5_\",\"form\":\"reset-password_form__2DRy6\",\"text\":\"reset-password_text__3SxXH\",\"link\":\"reset-password_link__3Pjsc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2oWlT\",\"title\":\"modal_title__2ihgP\",\"closeIcon\":\"modal_closeIcon__3DLS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-ingredients-card_container__3phQP\",\"link\":\"burger-ingredients-card_link__1Fy90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"burger-ingredients-card-list_list__1OSuc\",\"item\":\"burger-ingredients-card-list_item__38cjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"constructor-ingredient_listItem__3AV5v\",\"dragIcon\":\"constructor-ingredient_dragIcon__3OzYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__3F8ir\",\"popup_opened\":\"modal-overlay_popup_opened__3MzJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"orders-history_section__3zGWe\",\"list\":\"orders-history_list__1L9IX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order-ingredients_section__2lHA6\",\"list\":\"order-ingredients_list__E_LLC\"};"],"sourceRoot":""}